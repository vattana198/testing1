/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-08-02 02:18:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.common.themes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.liferay.exportimport.kernel.staging.LayoutStagingUtil;
import com.liferay.exportimport.kernel.staging.StagingUtil;
import com.liferay.layout.seo.kernel.LayoutSEOLink;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManager;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil;
import com.liferay.petra.string.CharPool;
import com.liferay.petra.string.StringBundler;
import com.liferay.petra.string.StringPool;
import com.liferay.portal.kernel.bean.BeanParamUtil;
import com.liferay.portal.kernel.bean.BeanPropertiesUtil;
import com.liferay.portal.kernel.configuration.Filter;
import com.liferay.portal.kernel.cookies.CookiesManagerUtil;
import com.liferay.portal.kernel.dao.search.DisplayTerms;
import com.liferay.portal.kernel.dao.search.ResultRowSplitter;
import com.liferay.portal.kernel.dao.search.RowChecker;
import com.liferay.portal.kernel.dao.search.RowMover;
import com.liferay.portal.kernel.dao.search.SearchContainer;
import com.liferay.portal.kernel.exception.LocalizedException;
import com.liferay.portal.kernel.exception.NoSuchLayoutException;
import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.language.LanguageUtil;
import com.liferay.portal.kernel.language.LanguageWrapper;
import com.liferay.portal.kernel.language.UnicodeLanguageUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.log.LogUtil;
import com.liferay.portal.kernel.model.*;
import com.liferay.portal.kernel.model.impl.*;
import com.liferay.portal.kernel.model.impl.VirtualLayout;
import com.liferay.portal.kernel.portlet.InvokerPortlet;
import com.liferay.portal.kernel.portlet.LiferayHeaderRequest;
import com.liferay.portal.kernel.portlet.LiferayHeaderResponse;
import com.liferay.portal.kernel.portlet.LiferayPortletMode;
import com.liferay.portal.kernel.portlet.LiferayPortletURL;
import com.liferay.portal.kernel.portlet.LiferayRenderRequest;
import com.liferay.portal.kernel.portlet.LiferayRenderResponse;
import com.liferay.portal.kernel.portlet.LiferayWindowState;
import com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletProvider;
import com.liferay.portal.kernel.portlet.PortletProviderUtil;
import com.liferay.portal.kernel.portlet.PortletSetupUtil;
import com.liferay.portal.kernel.portlet.PortletURLFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletURLUtil;
import com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil;
import com.liferay.portal.kernel.security.auth.AuthTokenUtil;
import com.liferay.portal.kernel.security.auth.PrincipalException;
import com.liferay.portal.kernel.security.permission.ActionKeys;
import com.liferay.portal.kernel.security.permission.ResourceActionsUtil;
import com.liferay.portal.kernel.service.*;
import com.liferay.portal.kernel.service.permission.GroupPermissionUtil;
import com.liferay.portal.kernel.service.permission.LayoutPermissionUtil;
import com.liferay.portal.kernel.service.permission.PortletPermissionUtil;
import com.liferay.portal.kernel.service.permission.RolePermissionUtil;
import com.liferay.portal.kernel.servlet.BufferCacheServletResponse;
import com.liferay.portal.kernel.servlet.MultiSessionMessages;
import com.liferay.portal.kernel.servlet.PortalMessages;
import com.liferay.portal.kernel.servlet.PortalWebResourceConstants;
import com.liferay.portal.kernel.servlet.PortalWebResourcesUtil;
import com.liferay.portal.kernel.servlet.ServletContextPool;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.servlet.taglib.ui.MenuItem;
import com.liferay.portal.kernel.util.ArrayUtil;
import com.liferay.portal.kernel.util.CalendarFactoryUtil;
import com.liferay.portal.kernel.util.Constants;
import com.liferay.portal.kernel.util.ContentTypes;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.FastDateFormatConstants;
import com.liferay.portal.kernel.util.FastDateFormatFactoryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.HashMapBuilder;
import com.liferay.portal.kernel.util.HtmlParserUtil;
import com.liferay.portal.kernel.util.HtmlUtil;
import com.liferay.portal.kernel.util.Http;
import com.liferay.portal.kernel.util.HttpComponentsUtil;
import com.liferay.portal.kernel.util.IntegerWrapper;
import com.liferay.portal.kernel.util.JavaConstants;
import com.liferay.portal.kernel.util.KeyValuePair;
import com.liferay.portal.kernel.util.ListUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.Portal;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.PortletKeys;
import com.liferay.portal.kernel.util.PrefsPropsUtil;
import com.liferay.portal.kernel.util.PropsKeys;
import com.liferay.portal.kernel.util.ReleaseInfo;
import com.liferay.portal.kernel.util.ServerDetector;
import com.liferay.portal.kernel.util.SessionClicks;
import com.liferay.portal.kernel.util.SetUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.TextFormatter;
import com.liferay.portal.kernel.util.Time;
import com.liferay.portal.kernel.util.TimeZoneUtil;
import com.liferay.portal.kernel.util.URLCodec;
import com.liferay.portal.kernel.util.UnicodeFormatter;
import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.util.WebKeys;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.impl.*;
import com.liferay.portal.security.sso.SSOUtil;
import com.liferay.portal.service.*;
import com.liferay.portal.servlet.BrowserSnifferUtil;
import com.liferay.portal.struts.Definition;
import com.liferay.portal.struts.StrutsUtil;
import com.liferay.portal.struts.TilesUtil;
import com.liferay.portal.util.PropsUtil;
import com.liferay.portal.util.PropsValues;
import com.liferay.portal.util.ShutdownUtil;
import com.liferay.portlet.HeaderRequestFactory;
import com.liferay.portlet.HeaderResponseFactory;
import com.liferay.portlet.LiferayPortletUtil;
import com.liferay.portlet.RenderParametersPool;
import com.liferay.portlet.RenderRequestFactory;
import com.liferay.portlet.RenderResponseFactory;
import com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil;
import com.liferay.portlet.usersadmin.util.UsersAdminUtil;
import com.liferay.sites.kernel.util.Sites;
import com.liferay.taglib.search.ResultRow;
import com.liferay.taglib.search.SearchEntry;
import com.liferay.taglib.search.TextSearchEntry;
import com.liferay.taglib.util.OutputTag;
import java.text.DateFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.TimeZone;
import java.util.TreeSet;
import javax.portlet.MimeResponse;
import javax.portlet.MutableRenderParameters;
import javax.portlet.PortletConfig;
import javax.portlet.PortletContext;
import javax.portlet.PortletException;
import javax.portlet.PortletMode;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.PortletURL;
import javax.portlet.UnavailableException;
import javax.portlet.WindowState;
import com.liferay.portal.kernel.cookies.constants.CookiesConstants;
import com.liferay.portal.kernel.feature.flag.FeatureFlagManagerUtil;
import com.liferay.portal.kernel.model.Portlet;
import com.liferay.portal.kernel.model.portlet.PortletDependency;
import com.liferay.portal.kernel.portlet.render.PortletRenderUtil;
import com.liferay.portal.kernel.servlet.BrowserMetadata;
import com.liferay.portal.kernel.session.timeout.SessionTimeoutUtil;
import com.liferay.portal.kernel.upload.configuration.UploadServletRequestConfigurationProviderUtil;
import com.liferay.portal.util.LayoutTypeAccessPolicyTracker;
import com.liferay.portlet.PortletTreeSet;
import com.liferay.portlet.internal.RenderStateUtil;
import com.liferay.taglib.aui.ScriptTag;
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;

public final class top_005fhead_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


private static String _getDateFormatPattern(Locale locale) {
	String languageId = LocaleUtil.toLanguageId(locale);

	String dateFormatPattern = _dateFormatPatterns.get(languageId);

	if (dateFormatPattern == null) {
		boolean endDelimiter = false;

		String delimiterString = StringPool.FORWARD_SLASH;

		SimpleDateFormat simpleDateFormat = (SimpleDateFormat)DateFormat.getDateInstance(DateFormat.SHORT, locale);

		dateFormatPattern = simpleDateFormat.toPattern();

		for (char dateDelimiter : _DATE_DELIMITERS) {
			if (dateFormatPattern.indexOf(dateDelimiter) != -1) {
				delimiterString = String.valueOf(dateDelimiter);

				endDelimiter = dateFormatPattern.endsWith(delimiterString);

				break;
			}
		}

		int dayOrder = dateFormatPattern.indexOf('d');
		int monthOrder = dateFormatPattern.indexOf('M');
		int yearOrder = dateFormatPattern.indexOf('y');

		if ((yearOrder < dayOrder) && (yearOrder < monthOrder)) {
			dateFormatPattern = StringBundler.concat("%Y", delimiterString, "%m", delimiterString, "%d");
		}
		else if (dayOrder < monthOrder) {
			dateFormatPattern = StringBundler.concat("%d", delimiterString, "%m", delimiterString, "%Y");
		}
		else {
			dateFormatPattern = StringBundler.concat("%m", delimiterString, "%d", delimiterString, "%Y");
		}

		if (endDelimiter) {
			dateFormatPattern += delimiterString;
		}

		_dateFormatPatterns.put(languageId, dateFormatPattern);
	}

	return dateFormatPattern;
}

private static final char[] _DATE_DELIMITERS = {
	CharPool.DASH, CharPool.FORWARD_SLASH, CharPool.PERIOD
};

private static final Map<String, String> _dateFormatPatterns = new ConcurrentHashMap<>();


private static final String _BOTTOM_KEY = "bottom";

private static final String _LEFT_KEY = "left";

private static final String _RIGHT_KEY = "right";

private static final String _SAME_FOR_ALL_KEY = "sameForAll";

private static final String _TOP_KEY = "top";

private static final String _UNIT_KEY = "unit";

private static final String _VALUE_KEY = "value";

private static final Set _unitSet = new HashSet();

static {
	_unitSet.add("%");
	_unitSet.add("em");
	_unitSet.add("px");
}


private String _escapeCssBlock(String css) {
	return StringUtil.replace(css, new String[] {"<", "expression("}, new String[] {"\\3c", ""});
}

private static final Log _log = LogFactoryUtil.getLog("portal_web.docroot.html.common.themes.top_head_jsp");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(17);
    _jspx_dependants.put("/html/common/themes/top_meta-ext.jsp", Long.valueOf(1710321210000L));
    _jspx_dependants.put("/html/common/themes/top_portlet_resources_js.jspf", Long.valueOf(1710321269000L));
    _jspx_dependants.put("/html/common/themes/top_meta.jspf", Long.valueOf(1710321269000L));
    _jspx_dependants.put("/html/common/themes/top_js-ext.jspf", Long.valueOf(1710321210000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-ui.tld", Long.valueOf(1718225697000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-portlet-ext.tld", Long.valueOf(1710321270000L));
    _jspx_dependants.put("/html/common/init-ext.jsp", Long.valueOf(1710321210000L));
    _jspx_dependants.put("/html/common/themes/init.jsp", Long.valueOf(1712363247000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-aui.tld", Long.valueOf(1712363247000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-util.tld", Long.valueOf(1710321270000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-theme.tld", Long.valueOf(1710321270000L));
    _jspx_dependants.put("/html/common/themes/top_js.jspf", Long.valueOf(1712363247000L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-portlet_2_0.tld", Long.valueOf(1718225656000L));
    _jspx_dependants.put("/html/common/init.jsp", Long.valueOf(1712363247000L));
    _jspx_dependants.put("/html/common/themes/portlet_css.jspf", Long.valueOf(1710321269000L));
    _jspx_dependants.put("/WEB-INF/tld/c.tld", Long.valueOf(1710321210000L));
    _jspx_dependants.put("/html/common/themes/top_portlet_resources_css.jspf", Long.valueOf(1710321269000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(8);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model.impl");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model");
    _jspx_imports_packages.add("com.liferay.portal.model.impl");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.liferay.portal.kernel.service");
    _jspx_imports_packages.add("com.liferay.portal.service");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(169);
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PrefsPropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ContentTypes");
    _jspx_imports_classes.add("com.liferay.portlet.RenderRequestFactory");
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("java.text.Format");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowMover");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalMessages");
    _jspx_imports_classes.add("com.liferay.portlet.usersadmin.util.UsersAdminUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.WebKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.render.PortletRenderUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.workflow.WorkflowConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.RolePermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.PrincipalException");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.liferay.taglib.util.OutputTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PropsKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.GetterUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayWindowState");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.portlet.PortletDependency");
    _jspx_imports_classes.add("javax.portlet.PortletContext");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.ServletContextPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.InvokerPortlet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SessionClicks");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsValues");
    _jspx_imports_classes.add("javax.portlet.PortletConfig");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.JavaConstants");
    _jspx_imports_classes.add("com.liferay.taglib.search.TextSearchEntry");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderResponseFactory");
    _jspx_imports_classes.add("com.liferay.portlet.LiferayPortletUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProviderUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HashMapBuilder");
    _jspx_imports_classes.add("com.liferay.portal.kernel.feature.flag.FeatureFlagManagerUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.StringPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.URLCodec");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("javax.portlet.MimeResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("java.util.TreeSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatConstants");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionMessages");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.PortletPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ActionKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.SearchContainer");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TimeZoneUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderRequest");
    _jspx_imports_classes.add("com.liferay.portlet.internal.RenderStateUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourcesUtil");
    _jspx_imports_classes.add("java.util.LinkedHashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.upload.configuration.UploadServletRequestConfigurationProviderUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanPropertiesUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionErrors");
    _jspx_imports_classes.add("com.liferay.portlet.RenderParametersPool");
    _jspx_imports_classes.add("javax.portlet.MutableRenderParameters");
    _jspx_imports_classes.add("com.liferay.portal.kernel.cookies.CookiesManagerUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil");
    _jspx_imports_classes.add("javax.portlet.PortletPreferences");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManager");
    _jspx_imports_classes.add("com.liferay.taglib.search.SearchEntry");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Portal");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HttpComponentsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONObject");
    _jspx_imports_classes.add("com.liferay.portal.util.LayoutTypeAccessPolicyTracker");
    _jspx_imports_classes.add("com.liferay.portal.servlet.BrowserSnifferUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.ResultRowSplitter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ArrayUtil");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.StagingUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.CharPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ResourceActionsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONArray");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.LayoutPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.configuration.Filter");
    _jspx_imports_classes.add("com.liferay.portal.security.sso.SSOUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.StringBundler");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HtmlUtil");
    _jspx_imports_classes.add("javax.portlet.PortletURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TextFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.taglib.ui.MenuItem");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.LocalizedException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.ShutdownUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.NoSuchLayoutException");
    _jspx_imports_classes.add("com.liferay.taglib.aui.ScriptTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.MultiSessionMessages");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderRequestFactory");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Constants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ReleaseInfo");
    _jspx_imports_classes.add("com.liferay.portal.struts.StrutsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BrowserMetadata");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.DisplayTerms");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocaleUtil");
    _jspx_imports_classes.add("javax.portlet.UnavailableException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourceConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Time");
    _jspx_imports_classes.add("java.util.TimeZone");
    _jspx_imports_classes.add("com.liferay.portal.kernel.cookies.constants.CookiesConstants");
    _jspx_imports_classes.add("java.util.concurrent.ConcurrentHashMap");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortalUtil");
    _jspx_imports_classes.add("javax.portlet.PortletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Validator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.Portlet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.UnicodeLanguageUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.session.timeout.SessionTimeoutUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.LayoutStagingUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.StringUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeProperties");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortletKeys");
    _jspx_imports_classes.add("com.liferay.taglib.search.ResultRow");
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ServerDetector");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocalizationUtil");
    _jspx_imports_classes.add("javax.portlet.WindowState");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ListUtil");
    _jspx_imports_classes.add("com.liferay.portlet.RenderResponseFactory");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLink");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageWrapper");
    _jspx_imports_classes.add("com.liferay.portlet.PortletTreeSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.AuthTokenUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HtmlParserUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SetUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.Definition");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.impl.VirtualLayout");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.IntegerWrapper");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.Log");
    _jspx_imports_classes.add("javax.portlet.PortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.KeyValuePair");
    _jspx_imports_classes.add("java.util.HashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProvider");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.CalendarFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowChecker");
    _jspx_imports_classes.add("javax.portlet.PortletRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletSetupUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.TilesUtil");
    _jspx_imports_classes.add("com.liferay.sites.kernel.util.Sites");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.GroupPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Http");
    _jspx_imports_classes.add("com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BufferCacheServletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.DateUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderResponse");
    _jspx_imports_classes.add("java.util.Collections");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLFactoryUtil");
    _jspx_imports_classes.add("javax.portlet.PortletException");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      //  liferay-theme:defineObjects
      com.liferay.taglib.theme.DefineObjectsTag _jspx_th_liferay_002dtheme_005fdefineObjects_005f0 = new com.liferay.taglib.theme.DefineObjectsTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0);
      try {
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setParent(null);
        int _jspx_eval_liferay_002dtheme_005fdefineObjects_005f0 = _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doStartTag();
        if (_jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0, _jsp_getInstanceManager(), false);
      }
      com.liferay.portal.kernel.theme.ThemeDisplay themeDisplay = null;
      com.liferay.portal.kernel.model.Company company = null;
      com.liferay.portal.kernel.model.User user = null;
      com.liferay.portal.kernel.model.User realUser = null;
      com.liferay.portal.kernel.model.Contact contact = null;
      com.liferay.portal.kernel.model.Layout layout = null;
      java.util.List layouts = null;
      java.lang.Long plid = null;
      com.liferay.portal.kernel.model.LayoutTypePortlet layoutTypePortlet = null;
      java.lang.Long scopeGroupId = null;
      com.liferay.portal.kernel.security.permission.PermissionChecker permissionChecker = null;
      java.util.Locale locale = null;
      java.util.TimeZone timeZone = null;
      com.liferay.portal.kernel.model.Theme theme = null;
      com.liferay.portal.kernel.model.ColorScheme colorScheme = null;
      com.liferay.portal.kernel.theme.PortletDisplay portletDisplay = null;
      java.lang.Long portletGroupId = null;
      themeDisplay = (com.liferay.portal.kernel.theme.ThemeDisplay) _jspx_page_context.findAttribute("themeDisplay");
      company = (com.liferay.portal.kernel.model.Company) _jspx_page_context.findAttribute("company");
      user = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("user");
      realUser = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("realUser");
      contact = (com.liferay.portal.kernel.model.Contact) _jspx_page_context.findAttribute("contact");
      layout = (com.liferay.portal.kernel.model.Layout) _jspx_page_context.findAttribute("layout");
      layouts = (java.util.List) _jspx_page_context.findAttribute("layouts");
      plid = (java.lang.Long) _jspx_page_context.findAttribute("plid");
      layoutTypePortlet = (com.liferay.portal.kernel.model.LayoutTypePortlet) _jspx_page_context.findAttribute("layoutTypePortlet");
      scopeGroupId = (java.lang.Long) _jspx_page_context.findAttribute("scopeGroupId");
      permissionChecker = (com.liferay.portal.kernel.security.permission.PermissionChecker) _jspx_page_context.findAttribute("permissionChecker");
      locale = (java.util.Locale) _jspx_page_context.findAttribute("locale");
      timeZone = (java.util.TimeZone) _jspx_page_context.findAttribute("timeZone");
      theme = (com.liferay.portal.kernel.model.Theme) _jspx_page_context.findAttribute("theme");
      colorScheme = (com.liferay.portal.kernel.model.ColorScheme) _jspx_page_context.findAttribute("colorScheme");
      portletDisplay = (com.liferay.portal.kernel.theme.PortletDisplay) _jspx_page_context.findAttribute("portletDisplay");
      portletGroupId = (java.lang.Long) _jspx_page_context.findAttribute("portletGroupId");
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<meta content=\"");
      out.print( ContentTypes.TEXT_HTML_UTF8 );
      out.write("\" http-equiv=\"content-type\" />\n");
      out.write("\n");

int refreshRate = ParamUtil.getInteger(request, "refresh_rate");

      out.write('\n');
      out.write('\n');
if (
 refreshRate > 0 ) {
      out.write("\n");
      out.write("	<meta content=\"");
      out.print( refreshRate );
      out.write(";\" http-equiv=\"refresh\" />\n");
}
      out.write('\n');
      out.write('\n');

String cacheControl = request.getParameter("cache_control");

      out.write('\n');
      out.write('\n');
if (
 (cacheControl != null) && cacheControl.equals("0") ) {
      out.write("\n");
      out.write("	<meta content=\"no-cache\" http-equiv=\"cache-control\" />\n");
      out.write("	<meta content=\"no-cache\" http-equiv=\"pragma\" />\n");
      out.write("	<meta content=\"0\" http-equiv=\"expires\" />\n");
}
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dtheme_005fmeta_002dtags_005f0(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"");
      out.print( themeDisplay.getFaviconURL() );
      out.write("\" rel=\"apple-touch-icon\" />\n");
      out.write("<link href=\"");
      out.print( themeDisplay.getFaviconURL() );
      out.write("\" rel=\"icon\" />\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link class=\"lfr-css-file\" data-senna-track=\"temporary\" href=\"");
      out.print( HtmlUtil.escapeAttribute(themeDisplay.getClayCSSURL()) );
      out.write("\" id=\"liferayAUICSS\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("\n");

PortletTreeSet portletTreeSet = null;

if (layoutTypePortlet != null) {
	portletTreeSet = new PortletTreeSet(layoutTypePortlet.getAllPortlets());
}

if (layout != null) {
	String ppid = ParamUtil.getString(request, "p_p_id");

	if (layout.isTypeAssetDisplay() || layout.isTypeContent()) {
		List<com.liferay.portal.kernel.model.PortletPreferences> portletPreferencesList = PortletPreferencesLocalServiceUtil.getPortletPreferences(PortletKeys.PREFS_OWNER_ID_DEFAULT, PortletKeys.PREFS_OWNER_TYPE_LAYOUT, layout.getPlid());

		for (com.liferay.portal.kernel.model.PortletPreferences portletPreferences : portletPreferencesList) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), portletPreferences.getPortletId());

			if ((portlet == null) || !portlet.isActive() || portlet.isUndeployedPortlet()) {
				continue;
			}

			portletTreeSet.add(portlet);
		}
	}
	else if ((layout.isTypeEmbedded() || layout.isTypePortlet()) && (themeDisplay.isStateMaximized() || themeDisplay.isStatePopUp() || (layout.isSystem() && Objects.equals(layout.getFriendlyURL(), PropsValues.CONTROL_PANEL_LAYOUT_FRIENDLY_URL)))) {
		if (Validator.isNotNull(ppid)) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), ppid);

			if ((portlet != null) && !portletTreeSet.contains(portlet)) {
				portletTreeSet.add(portlet);
			}
		}
	}
	else if (layout.isTypeControlPanel() || layout.isTypePanel()) {
		portletTreeSet = new PortletTreeSet(layout.getEmbeddedPortlets());

		if (Validator.isNotNull(ppid)) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), ppid);

			if ((portlet != null) && !portletTreeSet.contains(portlet)) {
				portletTreeSet.add(portlet);
			}
		}
	}

	String portletResource = ParamUtil.getString(request, PortalUtil.getPortletNamespace(ppid) + "portletResource");

	if (Validator.isNotNull(portletResource)) {
		Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), portletResource);

		if ((portlet != null) && !portletTreeSet.contains(portlet)) {
			portletTreeSet.add(portlet);
		}
	}

	Iterator<Portlet> portletsIterator = portletTreeSet.iterator();

	LayoutTypeAccessPolicy layoutTypeAccessPolicy = LayoutTypeAccessPolicyTracker.getLayoutTypeAccessPolicy(layout);

	while (portletsIterator.hasNext()) {
		Portlet portlet = portletsIterator.next();

		try {
			layoutTypeAccessPolicy.checkAccessAllowedToPortlet(request, layout, portlet);
		}
		catch (PrincipalException pe) {
			portletsIterator.remove();
		}
	}

	request.setAttribute(WebKeys.LAYOUT_PORTLETS, portletTreeSet);
}

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
if (
 !SetUtil.isEmpty(portletTreeSet) ) {
      out.write('\n');
      out.write('\n');
      out.write('	');

	PortletRenderUtil.writeHeaderCSSPaths(request, portletTreeSet, out);
	
      out.write('\n');
      out.write('\n');
}
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f0 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f0);
      try {
        _jspx_th_aui_005fscript_005f0.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f0.setParent(null);
        // /html/common/themes/top_js.jspf(8,0) name = senna type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f0.setSenna("temporary");
        // /html/common/themes/top_js.jspf(8,0) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f0.setType("text/javascript");
        int _jspx_eval_aui_005fscript_005f0 = _jspx_th_aui_005fscript_005f0.doStartTag();
        if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f0);
          }
          do {
            out.write("\n");
            out.write("	// <![CDATA[\n");
            out.write("		var Liferay = Liferay || {};\n");
            out.write("\n");
            out.write("		Liferay.Browser = {\n");
            out.write("			acceptsGzip: function() {\n");
            out.write("				return ");
            out.print( BrowserSnifferUtil.acceptsGzip(request) );
            out.write(";\n");
            out.write("			},\n");
            out.write("\n");
            out.write("			");

			String version = BrowserSnifferUtil.getVersion(request);

			String majorVersion = version;

			if (version.isEmpty()) {
				majorVersion = "0";
			}
			
            out.write("\n");
            out.write("\n");
            out.write("			getMajorVersion: function() {\n");
            out.write("				return ");
            out.print( majorVersion );
            out.write(";\n");
            out.write("			},\n");
            out.write("\n");
            out.write("			getRevision: function() {\n");
            out.write("				return '");
            out.print( BrowserSnifferUtil.getRevision(request) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getVersion: function() {\n");
            out.write("				return '");
            out.print( version );
            out.write("';\n");
            out.write("			},\n");
            out.write("\n");
            out.write("			");

			BrowserMetadata browserMetadata = BrowserSnifferUtil.getBrowserMetadata(request);
			
            out.write("\n");
            out.write("\n");
            out.write("			isAir: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isAir() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isChrome: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isChrome() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isEdge: function() {\n");
            out.write("				return ");
            out.print( BrowserSnifferUtil.isEdge(request) );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isFirefox: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isFirefox() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isGecko: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isGecko() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isIe: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isIe() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isIphone: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isIphone() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isLinux: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isLinux() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isMac: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isMac() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isMobile: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isMobile() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isMozilla: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isMozilla() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isOpera: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isOpera() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isRtf: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isRtf(version) );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isSafari: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isSafari() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isSun: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isSun() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isWebKit: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isWebKit() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isWindows: function() {\n");
            out.write("				return ");
            out.print( browserMetadata.isWindows() );
            out.write(";\n");
            out.write("			}\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		Liferay.Data = Liferay.Data || {};\n");
            out.write("\n");
            out.write("		Liferay.Data.ICONS_INLINE_SVG = true;\n");
            out.write("\n");
            out.write("		Liferay.Data.NAV_SELECTOR = '#navigation';\n");
            out.write("\n");
            out.write("		Liferay.Data.NAV_SELECTOR_MOBILE = '#navigationCollapse';\n");
            out.write("\n");
            out.write("		Liferay.Data.isCustomizationView = function() {\n");
            out.write("			return ");
            out.print( layoutTypePortlet.isCustomizable() && LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.CUSTOMIZE) );
            out.write(";\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		Liferay.Data.notices = [\n");
            out.write("			");
if (
 ShutdownUtil.isInProcess() ) {
            out.write("\n");
            out.write("				{\n");
            out.write("					title: '");
            if (_jspx_meth_liferay_002dui_005fmessage_005f0(_jspx_th_aui_005fscript_005f0, _jspx_page_context))
              return;
            out.write(" <span class=\"mx-2\">");
            out.print( FastDateFormatFactoryUtil.getTime(locale).format(Time.getDate(CalendarFactoryUtil.getCalendar(timeZone))) );
            out.write(' ');
            out.print( timeZone.getDisplayName(false, TimeZone.SHORT, locale) );
            out.write("</span>',\n");
            out.write("					message: '");
            //  liferay-ui:message
            com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f1 = new com.liferay.taglib.ui.MessageTag();
            _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f1);
            try {
              _jspx_th_liferay_002dui_005fmessage_005f1.setPageContext(_jspx_page_context);
              _jspx_th_liferay_002dui_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_aui_005fscript_005f0);
              // /html/common/themes/top_js.jspf(111,15) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_liferay_002dui_005fmessage_005f1.setArguments( String.valueOf((ShutdownUtil.getInProcess() / Time.MINUTE) + 1) );
              // /html/common/themes/top_js.jspf(111,15) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_liferay_002dui_005fmessage_005f1.setKey("the-portal-will-shutdown-for-maintenance-in-x-minutes");
              // /html/common/themes/top_js.jspf(111,15) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_liferay_002dui_005fmessage_005f1.setTranslateArguments( false );
              int _jspx_eval_liferay_002dui_005fmessage_005f1 = _jspx_th_liferay_002dui_005fmessage_005f1.doStartTag();
              if (_jspx_th_liferay_002dui_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f1, _jsp_getInstanceManager(), false);
            }
            out.write("'\n");
            out.write("						");
if (
 Validator.isNotNull(ShutdownUtil.getMessage()) ) {
            out.write("\n");
            out.write("							+ '<span class=\"custom-shutdown-message\">");
            out.print( HtmlUtil.escape(ShutdownUtil.getMessage()) );
            out.write("</span>'\n");
            out.write("						");
}
            out.write(",\n");
            out.write("					type: 'warning'\n");
            out.write("				},\n");
            out.write("			");
}
            out.write("\n");
            out.write("		];\n");
            out.write("\n");
            out.write("		(function () {\n");
            out.write("			var available = {};\n");
            out.write("\n");
            out.write("			var direction = {};\n");
            out.write("\n");
            out.write("			");

			for (Locale curLocale : LanguageUtil.getAvailableLocales()) {
				String selLanguageId = LocaleUtil.toLanguageId(curLocale);
			
            out.write("\n");
            out.write("\n");
            out.write("				available['");
            out.print( selLanguageId );
            out.write("'] = '");
            out.print( HtmlUtil.escapeJS(curLocale.getDisplayName(locale)) );
            out.write("';\n");
            out.write("				direction['");
            out.print( selLanguageId );
            out.write("'] = '");
            out.print( LanguageUtil.get(curLocale, "lang.dir") );
            out.write("';\n");
            out.write("\n");
            out.write("			");

			}
			
            out.write("\n");
            out.write("\n");
            out.write("			Liferay.Language = {\n");
            out.write("				available,\n");
            out.write("				direction,\n");
            out.write("				get: function(key) {\n");
            out.write("					return key;\n");
            out.write("				}\n");
            out.write("			};\n");
            out.write("		})();\n");
            out.write("\n");
            out.write("		var featureFlags = ");
            out.print( FeatureFlagManagerUtil.getJSON(themeDisplay.getCompanyId()) );
            out.write(";\n");
            out.write("\n");
            out.write("		Liferay.FeatureFlags = Object.keys(featureFlags).reduce(\n");
            out.write("			(acc, key) => ({\n");
            out.write("				...acc, [key]: featureFlags[key] === 'true' || featureFlags[key] === true\n");
            out.write("			}), {}\n");
            out.write("		);\n");
            out.write("\n");
            out.write("		Liferay.PortletKeys = {\n");
            out.write("			DOCUMENT_LIBRARY: '");
            out.print( PortletKeys.DOCUMENT_LIBRARY );
            out.write("',\n");
            out.write("			DYNAMIC_DATA_MAPPING: 'com_liferay_dynamic_data_mapping_web_portlet_DDMPortlet',\n");
            out.write("			ITEM_SELECTOR: '");
            out.print( PortletKeys.ITEM_SELECTOR );
            out.write("'\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		Liferay.PropsValues = {\n");
            out.write("			JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT: ");
            out.print( PrefsPropsUtil.getInteger(themeDisplay.getCompanyId(), PropsKeys.JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT, PropsValues.JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT) );
            out.write(",\n");
            out.write("			UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE: ");
            out.print( UploadServletRequestConfigurationProviderUtil.getMaxSize() );
            out.write("\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		Liferay.ThemeDisplay = {\n");
            out.write("\n");
            out.write("			");

			Group scopeGroup = themeDisplay.getScopeGroup();

			Group liveGroup = StagingUtil.getLiveGroup(scopeGroup);
			
            out.write("\n");
            out.write("\n");
            out.write("			");
if (
 layout != null ) {
            out.write("\n");
            out.write("				getLayoutId: function() {\n");
            out.write("					return '");
            out.print( layout.getLayoutId() );
            out.write("';\n");
            out.write("				},\n");
            out.write("\n");
            out.write("				");

				Layout controlPanelLayout = themeDisplay.getControlPanelLayout();
				
            out.write("\n");
            out.write("\n");
            out.write("				getLayoutRelativeControlPanelURL: function() {\n");
            out.write("					return '");
            out.print( PortalUtil.getLayoutRelativeURL(new VirtualLayout(controlPanelLayout, scopeGroup), themeDisplay) );
            out.write("';\n");
            out.write("				},\n");
            out.write("\n");
            out.write("				getLayoutRelativeURL: function() {\n");
            out.write("					return '");
            out.print( PortalUtil.getLayoutRelativeURL(layout, themeDisplay) );
            out.write("';\n");
            out.write("				},\n");
            out.write("				getLayoutURL: function() {\n");
            out.write("					return '");
            out.print( PortalUtil.getLayoutURL(layout, themeDisplay) );
            out.write("';\n");
            out.write("				},\n");
            out.write("				getParentLayoutId: function() {\n");
            out.write("					return '");
            out.print( layout.getParentLayoutId() );
            out.write("';\n");
            out.write("				},\n");
            out.write("				isControlPanel: function() {\n");
            out.write("					return ");
            out.print( layout.isTypeControlPanel() );
            out.write(";\n");
            out.write("				},\n");
            out.write("				isPrivateLayout: function() {\n");
            out.write("					return '");
            out.print( layout.isPrivateLayout() );
            out.write("';\n");
            out.write("				},\n");
            out.write("				isVirtualLayout: function() {\n");
            out.write("					return ");
            out.print( layout instanceof VirtualLayout );
            out.write(";\n");
            out.write("				},\n");
            out.write("			");
}
            out.write("\n");
            out.write("\n");
            out.write("			getBCP47LanguageId: function() {\n");
            out.write("				return '");
            out.print( LanguageUtil.getBCP47LanguageId(request) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCanonicalURL: function() {\n");
            out.write("\n");
            out.write("				");

				LayoutSEOLinkManager layoutSEOLinkManager = LayoutSEOLinkManagerUtil.getLayoutSEOLinkManager();

				String completeURL = PortalUtil.getCurrentCompleteURL(request);

				LayoutSEOLink layoutSEOLink = layoutSEOLinkManager.getCanonicalLayoutSEOLink(layout, themeDisplay.getLocale(), PortalUtil.getCanonicalURL(completeURL, themeDisplay, layout, false, false), themeDisplay);
				
            out.write("\n");
            out.write("\n");
            out.write("				return '");
            out.print( HtmlUtil.escapeJS(layoutSEOLink.getHref()) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCDNBaseURL: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getCDNBaseURL() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCDNDynamicResourcesHost: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getCDNDynamicResourcesHost() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCDNHost: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getCDNHost() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCompanyGroupId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getCompanyGroupId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getCompanyId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getCompanyId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getDefaultLanguageId: function() {\n");
            out.write("				return '");
            out.print( LocaleUtil.toLanguageId(themeDisplay.getSiteDefaultLocale()) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getDoAsUserIdEncoded: function() {\n");
            out.write("				return '");
            out.print( UnicodeFormatter.toString(themeDisplay.getDoAsUserId()) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getLanguageId: function() {\n");
            out.write("				return '");
            out.print( LanguageUtil.getLanguageId(request) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getParentGroupId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getSiteGroupId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathContext: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathContext() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathImage: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathImage() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathJavaScript: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathJavaScript() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathMain: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathMain() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathThemeImages: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathThemeImages() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPathThemeRoot: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathThemeRoot() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPlid: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPlid() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPortalURL: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPortalURL() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getRealUserId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getRealUserId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getRemoteAddr: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getRemoteAddr() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getRemoteHost: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getRemoteHost() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getScopeGroupId: function() {\n");
            out.write("				return '");
            out.print( scopeGroup.getGroupId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getScopeGroupIdOrLiveGroupId: function() {\n");
            out.write("				return '");
            out.print( liveGroup.getGroupId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getSessionId: function() {\n");
            out.write("				return '");
            out.print( PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID ? session.getId() : StringPool.BLANK );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getSiteAdminURL: function() {\n");
            out.write("				return '");
            out.print( PortalUtil.getSiteAdminURL(themeDisplay, StringPool.BLANK, null) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getSiteGroupId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getSiteGroupId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getURLControlPanel: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getURLControlPanel() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getURLHome: function() {\n");
            out.write("				return '");
            out.print( HtmlUtil.escapeJS(themeDisplay.getURLHome()) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getUserEmailAddress: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.isSignedIn() ? HtmlUtil.escapeJS(user.getEmailAddress()) : StringPool.BLANK );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getUserId: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getUserId() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getUserName: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.isSignedIn() ? UnicodeFormatter.toString(user.getFullName()) : StringPool.BLANK );
            out.write("';\n");
            out.write("			},\n");
            out.write("			isAddSessionIdToURL: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isAddSessionIdToURL() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isImpersonated: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isImpersonated() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isSignedIn: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isSignedIn() );
            out.write(";\n");
            out.write("			},\n");
            out.write("\n");
            out.write("			isStagedPortlet: function() {\n");
            out.write("				");
            out.write("\n");
            out.write("					");
if (
 Validator.isNotNull(themeDisplay.getPpid()) ) {
            out.write("\n");
            out.write("						return ");
            out.print( liveGroup.isStagedPortlet(themeDisplay.getPpid()) );
            out.write(";\n");
            out.write("					");
            out.write("\n");
            out.write("					");
}
else {
            out.write("\n");
            out.write("						return false;\n");
            out.write("					");
            out.write("\n");
            out.write("				");
}
            out.write("\n");
            out.write("			},\n");
            out.write("\n");
            out.write("			isStateExclusive: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isStateExclusive() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isStateMaximized: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isStateMaximized() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			isStatePopUp: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isStatePopUp() );
            out.write(";\n");
            out.write("			}\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		var themeDisplay = Liferay.ThemeDisplay;\n");
            out.write("\n");
            out.write("		Liferay.AUI = {\n");
            out.write("\n");
            out.write("			");

			long jsLastModified = PortalWebResourcesUtil.getLastModified(PortalWebResourceConstants.RESOURCE_TYPE_JS);
			
            out.write("\n");
            out.write("\n");
            out.write("			getCombine: function() {\n");
            out.write("				return ");
            out.print( themeDisplay.isThemeJsFastLoad() );
            out.write(";\n");
            out.write("			},\n");
            out.write("			getComboPath: function() {\n");
            out.write("				return '");
            out.print( PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + themeDisplay.getPathContext() + "/combo/", "minifierType=", jsLastModified) );
            out.write("&';\n");
            out.write("			},\n");
            out.write("			getDateFormat: function() {\n");
            out.write("				return '");
            out.print( _getDateFormatPattern(locale) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getEditorCKEditorPath: function() {\n");
            out.write("				return '");
            out.print( PortalWebResourcesUtil.getContextPath(PortalWebResourceConstants.RESOURCE_TYPE_EDITOR_CKEDITOR) );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getFilter: function() {\n");
            out.write("				var filter = 'raw';\n");
            out.write("\n");
            out.write("				");
            out.write("\n");
            out.write("					");
if (
 themeDisplay.isThemeJsFastLoad() ) {
            out.write("\n");
            out.write("						filter = 'min';\n");
            out.write("					");
            out.write("\n");
            out.write("					");
}
else if (
 PropsValues.JAVASCRIPT_LOG_ENABLED ) {
            out.write("\n");
            out.write("						filter = 'debug';\n");
            out.write("					");
            out.write("\n");
            out.write("				");
}
            out.write("\n");
            out.write("\n");
            out.write("				return filter;\n");
            out.write("			},\n");
            out.write("			getFilterConfig: function() {\n");
            out.write("				var instance = this;\n");
            out.write("\n");
            out.write("				var filterConfig = null;\n");
            out.write("\n");
            out.write("				if (!instance.getCombine()) {\n");
            out.write("					filterConfig = {\n");
            out.write("						replaceStr: '.js' + instance.getStaticResourceURLParams(),\n");
            out.write("						searchExp: '\\\\.js$'\n");
            out.write("					};\n");
            out.write("				}\n");
            out.write("\n");
            out.write("				return filterConfig;\n");
            out.write("			},\n");
            out.write("			getJavaScriptRootPath: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathJavaScript() );
            out.write("';\n");
            out.write("			},\n");
            out.write("			getPortletRootPath: function() {\n");
            out.write("				return '");
            out.print( themeDisplay.getPathContext() );
            out.write("/html/portlet';\n");
            out.write("			},\n");
            out.write("			getStaticResourceURLParams: function() {\n");
            out.write("				return '");
            out.print( PortalUtil.getStaticResourceURL(request, StringPool.BLANK, "minifierType=", jsLastModified) );
            out.write("';\n");
            out.write("			}\n");
            out.write("		};\n");
            out.write("\n");
            out.write("		Liferay.authToken = '");
            out.print( AuthTokenUtil.getToken(request) );
            out.write("';\n");
            out.write("\n");
            out.write("		");

		String currentURL = PortalUtil.getCurrentURL(request);
		
            out.write("\n");
            out.write("\n");
            out.write("		Liferay.currentURL = '");
            out.print( HtmlUtil.escapeJS(currentURL) );
            out.write("';\n");
            out.write("		Liferay.currentURLEncoded = '");
            out.print( HtmlUtil.escapeJS(URLCodec.encodeURL(currentURL)) );
            out.write("';\n");
            out.write("	// ]]>\n");
            int evalDoAfterBody = _jspx_th_aui_005fscript_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_aui_005fscript_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f0, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f1(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');

Group group = null;

if (layout != null) {
	group = layout.getGroup();
}

      out.write('\n');
      out.write('\n');
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f1 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f1);
      try {
        _jspx_th_aui_005fscript_005f1.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f1.setParent(null);
        // /html/common/themes/top_js.jspf(423,0) name = senna type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f1.setSenna("temporary");
        // /html/common/themes/top_js.jspf(423,0) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f1.setType("text/javascript");
        int _jspx_eval_aui_005fscript_005f1 = _jspx_th_aui_005fscript_005f1.doStartTag();
        if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f1);
          }
          do {
            out.write("\n");
            out.write("	// <![CDATA[\n");
            out.write("		");
if (
 layoutTypePortlet != null ) {
            out.write("\n");
            out.write("			");
            out.write("\n");
            out.write("				");
if (
 layoutTypePortlet.hasStateMax() ) {
            out.write("\n");
            out.write("					Liferay.Portlet.register('");
            out.print( HtmlUtil.escapeJS(layoutTypePortlet.getStateMaxPortletId()) );
            out.write("');\n");
            out.write("				");
            out.write("\n");
            out.write("				");
}
else if (
 themeDisplay.isStatePopUp() ) {
            out.write("\n");
            out.write("					Liferay.Portlet.register('");
            out.print( HtmlUtil.escapeJS(themeDisplay.getPpid()) );
            out.write("');\n");
            out.write("				");
            out.write("\n");
            out.write("			");
}
            out.write('\n');
            out.write('	');
            out.write('	');
}
            out.write("\n");
            out.write("\n");
            out.write("		");
if (
 themeDisplay.isSignedIn() ) {
            out.write("\n");
            out.write("			");
            out.write("\n");
            out.write("				");
if (
 (group != null) && group.isControlPanel() && !LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.UPDATE) && !(layoutTypePortlet.isCustomizable() && layoutTypePortlet.isCustomizedView() && LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.CUSTOMIZE)) ) {
            out.write("\n");
            out.write("					Liferay._editControlsState = 'visible';\n");
            out.write("				");
            out.write("\n");
            out.write("				");
}
else {
            out.write("\n");
            out.write("					Liferay._editControlsState = '");
            out.print( HtmlUtil.escapeJS(GetterUtil.getString(SessionClicks.get(request, "com.liferay.frontend.js.web_toggleControls", "visible"), "visible")) );
            out.write("';\n");
            out.write("				");
            out.write("\n");
            out.write("			");
}
            out.write('\n');
            out.write('	');
            out.write('	');
}
            out.write("\n");
            out.write("	// ]]>\n");
            int evalDoAfterBody = _jspx_th_aui_005fscript_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_aui_005fscript_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f1, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

UnicodeProperties groupTypeSettingsUnicodeProperties = group.getTypeSettingsProperties();

String[] analyticsTypes = PrefsPropsUtil.getStringArray(company.getCompanyId(), PropsKeys.ADMIN_ANALYTICS_TYPES, StringPool.NEW_LINE);

for (String analyticsType : analyticsTypes) {

      out.write('\n');
      out.write('\n');
      out.write('	');
      out.write('\n');
      out.write('	');
      out.write('	');
if (
 StringUtil.equalsIgnoreCase(analyticsType, "google") ) {
      out.write("\n");
      out.write("\n");
      out.write("			");

			String googleAnalyticsId = groupTypeSettingsUnicodeProperties.getProperty("googleAnalyticsId");
			
      out.write("\n");
      out.write("\n");
      out.write("			");
if (
 Validator.isNotNull(googleAnalyticsId) ) {
      out.write("\n");
      out.write("				");
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f2 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f2);
      try {
        _jspx_th_aui_005fscript_005f2.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f2.setParent(null);
        // /html/common/themes/top_js.jspf(467,4) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f2.setId("googleAnalyticsScript");
        // /html/common/themes/top_js.jspf(467,4) name = senna type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f2.setSenna("permanent");
        // /html/common/themes/top_js.jspf(467,4) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f2.setType("text/javascript");
        int _jspx_eval_aui_005fscript_005f2 = _jspx_th_aui_005fscript_005f2.doStartTag();
        if (_jspx_eval_aui_005fscript_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_aui_005fscript_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f2);
          }
          do {
            out.write("\n");
            out.write("					(function(i, s, o, g, r, a, m) {\n");
            out.write("						i['GoogleAnalyticsObject'] = r;\n");
            out.write("\n");
            out.write("						i[r] = i[r] || function() {\n");
            out.write("							var arrayValue = i[r].q || [];\n");
            out.write("\n");
            out.write("							i[r].q = arrayValue;\n");
            out.write("\n");
            out.write("							(i[r].q).push(arguments);\n");
            out.write("						};\n");
            out.write("\n");
            out.write("						i[r].l = 1 * new Date();\n");
            out.write("\n");
            out.write("						a = s.createElement(o);\n");
            out.write("						m = s.getElementsByTagName(o)[0];\n");
            out.write("						a.async = 1;\n");
            out.write("						a.src = g;\n");
            out.write("						m.parentNode.insertBefore(a, m);\n");
            out.write("					})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n");
            out.write("\n");
            out.write("					");

					String googleAnalyticsCreateCustomConfiguration = groupTypeSettingsUnicodeProperties.getProperty("googleAnalyticsCreateCustomConfiguration");
					
            out.write("\n");
            out.write("\n");
            out.write("					");
            out.write("\n");
            out.write("						");
if (
 Validator.isNotNull(googleAnalyticsCreateCustomConfiguration) ) {
            out.write("\n");
            out.write("							ga('create', '");
            out.print( HtmlUtil.escapeJS(googleAnalyticsId) );
            out.write("', 'auto', ");
            out.print( googleAnalyticsCreateCustomConfiguration );
            out.write(");\n");
            out.write("						");
            out.write("\n");
            out.write("						");
}
else {
            out.write("\n");
            out.write("							ga('create', '");
            out.print( HtmlUtil.escapeJS(googleAnalyticsId) );
            out.write("', 'auto');\n");
            out.write("						");
            out.write("\n");
            out.write("					");
}
            out.write("\n");
            out.write("\n");
            out.write("					");

					String googleAnalyticsCustomConfiguration = groupTypeSettingsUnicodeProperties.getProperty("googleAnalyticsCustomConfiguration");
					
            out.write("\n");
            out.write("\n");
            out.write("					");
if (
 Validator.isNotNull(googleAnalyticsCustomConfiguration) ) {
            out.write("\n");
            out.write("						(function(ga) {\n");
            out.write("							");
            out.print( googleAnalyticsCustomConfiguration );
            out.write("\n");
            out.write("						})(ga);\n");
            out.write("					");
}
            out.write("\n");
            out.write("\n");
            out.write("					ga('send', 'pageview');\n");
            out.write("\n");
            out.write("					");
if (
 PropsValues.JAVASCRIPT_SINGLE_PAGE_APPLICATION_ENABLED ) {
            out.write("\n");
            out.write("						Liferay.on(\n");
            out.write("							'endNavigate',\n");
            out.write("							function(event) {\n");
            out.write("								ga('set', 'page', Liferay.ThemeDisplay.getLayoutRelativeURL());\n");
            out.write("								ga('send', 'pageview');\n");
            out.write("							}\n");
            out.write("						);\n");
            out.write("					");
}
            out.write("\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_aui_005fscript_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_aui_005fscript_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_aui_005fscript_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f2, _jsp_getInstanceManager(), false);
      }
      out.write("\n");
      out.write("			");
}
      out.write('\n');
      out.write('	');
      out.write('	');
      out.write('\n');
      out.write('	');
      out.write('	');
}
else if (
 StringUtil.equalsIgnoreCase(analyticsType, "googleAnalytics4") ) {
      out.write("\n");
      out.write("\n");
      out.write("			");

			String googleAnalytics4Id = groupTypeSettingsUnicodeProperties.getProperty("googleAnalytics4Id");
			
      out.write("\n");
      out.write("\n");
      out.write("			");
if (
 Validator.isNotNull(googleAnalytics4Id) ) {
      out.write("\n");
      out.write("				");
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f3 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f3);
      try {
        _jspx_th_aui_005fscript_005f3.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f3.setParent(null);
        // /html/common/themes/top_js.jspf(532,4) name = async type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f3.setAsync( true );
        // /html/common/themes/top_js.jspf(532,4) name = src type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f3.setSrc( "https://www.googletagmanager.com/gtag/js?id=" + HtmlUtil.escapeJS(googleAnalytics4Id) );
        int _jspx_eval_aui_005fscript_005f3 = _jspx_th_aui_005fscript_005f3.doStartTag();
        if (_jspx_th_aui_005fscript_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f3, _jsp_getInstanceManager(), false);
      }
      out.write("\n");
      out.write("\n");
      out.write("				");
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f4 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f4);
      try {
        _jspx_th_aui_005fscript_005f4.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f4.setParent(null);
        int _jspx_eval_aui_005fscript_005f4 = _jspx_th_aui_005fscript_005f4.doStartTag();
        if (_jspx_eval_aui_005fscript_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_aui_005fscript_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f4);
          }
          do {
            out.write("\n");
            out.write("					window.dataLayer = window.dataLayer || [];\n");
            out.write("					function gtag(){dataLayer.push(arguments);}\n");
            out.write("					gtag('js', new Date());\n");
            out.write("					gtag('config', '");
            out.print( HtmlUtil.escapeJS(googleAnalytics4Id) );
            out.write("');\n");
            out.write("\n");
            out.write("					");

					String googleAnalytics4CustomConfiguration = groupTypeSettingsUnicodeProperties.getProperty("googleAnalytics4CustomConfiguration");
					
            out.write("\n");
            out.write("\n");
            out.write("					");
if (
 Validator.isNotNull(googleAnalytics4CustomConfiguration) ) {
            out.write("\n");
            out.write("						");
            out.print( googleAnalytics4CustomConfiguration );
            out.write("\n");
            out.write("					");
}
            out.write("\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_aui_005fscript_005f4.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_aui_005fscript_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_aui_005fscript_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f4, _jsp_getInstanceManager(), false);
      }
      out.write("\n");
      out.write("			");
}
      out.write('\n');
      out.write('	');
      out.write('	');
      out.write('\n');
      out.write('	');
      out.write('	');
}
else {
      out.write("\n");
      out.write("\n");
      out.write("			");

			String analyticsScript = groupTypeSettingsUnicodeProperties.getProperty(Sites.ANALYTICS_PREFIX + analyticsType);
			
      out.write("\n");
      out.write("\n");
      out.write("			");
if (
 Validator.isNotNull(analyticsScript) ) {
      out.write("\n");
      out.write("				");
      out.print( analyticsScript );
      out.write("\n");
      out.write("			");
}
      out.write('\n');
      out.write('	');
      out.write('	');
      out.write('\n');
      out.write('	');
}
      out.write('\n');
      out.write('\n');

}

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
if (
 !SetUtil.isEmpty(portletTreeSet) ) {
      out.write('\n');
      out.write('\n');
      out.write('	');

	PortletRenderUtil.writeHeaderJavaScriptPaths(request, portletTreeSet, out);
	
      out.write('\n');
      out.write('\n');
}
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

List<String> markupHeaders = (List<String>)request.getAttribute(MimeResponse.MARKUP_HEAD_ELEMENT);

      out.write('\n');
      out.write('\n');
if (
 markupHeaders != null ) {
      out.write('\n');
      out.write('\n');
      out.write('	');

	for (String markupHeader : markupHeaders) {
	
      out.write("\n");
      out.write("\n");
      out.write("		");
      out.print( markupHeader );
      out.write('\n');
      out.write('\n');
      out.write('	');

	}
	
      out.write('\n');
      out.write('\n');
}
      out.write('\n');
      out.write('\n');

com.liferay.petra.string.StringBundler pageTopSB = OutputTag.getDataSB(request, WebKeys.PAGE_TOP);

      out.write('\n');
      out.write('\n');
if (
 pageTopSB != null ) {
      out.write('\n');
      out.write('\n');
      out.write('	');

	pageTopSB.writeTo(out);
	
      out.write('\n');
      out.write('\n');
}
      out.write('\n');
      out.write('\n');

boolean portletHubRequired = false;

for (Portlet portlet : portletTreeSet) {
	for (PortletDependency portletDependency : portlet.getPortletDependencies()) {
		if (Objects.equals(portletDependency.getName(), "PortletHub") && Objects.equals(portletDependency.getScope(), "javax.portlet")) {
			portletHubRequired = true;

			break;
		}
	}

	if (portletHubRequired) {
		break;
	}
}

      out.write('\n');
      out.write('\n');
if (
 portletHubRequired ) {
      out.write('\n');
      out.write('	');
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f5 = new com.liferay.taglib.aui.ScriptTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f5);
      try {
        _jspx_th_aui_005fscript_005f5.setPageContext(_jspx_page_context);
        _jspx_th_aui_005fscript_005f5.setParent(null);
        // /html/common/themes/top_head.jsp(158,1) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_aui_005fscript_005f5.setType("text/javascript");
        int _jspx_eval_aui_005fscript_005f5 = _jspx_th_aui_005fscript_005f5.doStartTag();
        if (_jspx_eval_aui_005fscript_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_aui_005fscript_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f5);
          }
          do {
            out.write("\n");
            out.write("		var portlet = portlet || {};\n");
            out.write("\n");
            out.write("		portlet.data = portlet.data || {};\n");
            out.write("\n");
            out.write("		portlet.data.pageRenderState = ");
            out.print( RenderStateUtil.generateJSON(request, themeDisplay) );
            out.write(';');
            out.write('\n');
            out.write('	');
            int evalDoAfterBody = _jspx_th_aui_005fscript_005f5.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_aui_005fscript_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_aui_005fscript_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f5, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
}
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<link class=\"lfr-css-file\" data-senna-track=\"temporary\" href=\"");
      out.print( HtmlUtil.escapeAttribute(themeDisplay.getMainCSSURL()) );
      out.write("\" id=\"liferayThemeCSS\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');
if (
 (layout != null) && Validator.isNotNull(layout.getCssText()) ) {
      out.write("\n");
      out.write("	<style data-senna-track=\"temporary\" type=\"text/css\">\n");
      out.write("		");
      out.print( _escapeCssBlock(layout.getCssText()) );
      out.write("\n");
      out.write("	</style>\n");
}
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
if (
 portletTreeSet != null ) {
      out.write("\n");
      out.write("	<style data-senna-track=\"temporary\" type=\"text/css\">\n");
      out.write("\n");
      out.write("		");

		for (Portlet portlet : portletTreeSet) {
			PortletPreferences portletPreferences = themeDisplay.getStrictLayoutPortletSetup(layout, portlet.getPortletId());

			String portletSetupCss = portletPreferences.getValue("portletSetupCss", StringPool.BLANK);
		
      out.write("\n");
      out.write("\n");
      out.write("			");
if (
 Validator.isNotNull(portletSetupCss) ) {
      out.write("\n");
      out.write("\n");
      out.write("				");

				try {
				
      out.write("\n");
      out.write("\n");
      out.write("					");
      out.write('\n');
      out.write('\n');

JSONObject jsonObject = PortletSetupUtil.cssToJSONObject(portletPreferences, portletSetupCss);

List<String> finalCSS = new ArrayList<>();

// Background data

JSONObject bgDataJSONObject = jsonObject.getJSONObject("bgData");

if (bgDataJSONObject != null) {
	String bgColor = bgDataJSONObject.getString("backgroundColor");
	String bgImage = bgDataJSONObject.getString("backgroundImage");

	JSONObject bgPosJSONObject = bgDataJSONObject.getJSONObject("backgroundPosition");

	JSONObject bgPosLeftJSONObject = bgPosJSONObject.getJSONObject(_LEFT_KEY);
	JSONObject bgPosTopJSONObject = bgPosJSONObject.getJSONObject(_TOP_KEY);

	String bgPosLeftValue = bgPosLeftJSONObject.getString(_VALUE_KEY) + bgPosLeftJSONObject.getString(_UNIT_KEY);
	String bgPosTopValue = bgPosTopJSONObject.getString(_VALUE_KEY) + bgPosTopJSONObject.getString(_UNIT_KEY);

	String bgPosValue = bgPosLeftValue + " " + bgPosTopValue;

	boolean useBgImage = bgDataJSONObject.getBoolean("useBgImage");

	if (Validator.isNotNull(bgColor)) {
		finalCSS.add("background-color: " + bgColor);
	}

	if (Validator.isNotNull(bgImage)) {
		finalCSS.add("background-image: url(" + bgImage + ")");
	}

	if (useBgImage) {
		finalCSS.add("background-position: " + bgPosValue);
	}
}

// Border data

JSONObject borderDataJSONObject = jsonObject.getJSONObject("borderData");

if (borderDataJSONObject != null) {
	JSONObject borderWidthJSONObject = borderDataJSONObject.getJSONObject("borderWidth");
	JSONObject borderStyleJSONObject = borderDataJSONObject.getJSONObject("borderStyle");
	JSONObject borderColorJSONObject = borderDataJSONObject.getJSONObject("borderColor");

	boolean ufaBorderWidth = borderWidthJSONObject.getBoolean(_SAME_FOR_ALL_KEY);
	boolean ufaBorderStyle = borderStyleJSONObject.getBoolean(_SAME_FOR_ALL_KEY);
	boolean ufaBorderColor = borderColorJSONObject.getBoolean(_SAME_FOR_ALL_KEY);

	// Width

	JSONObject borderWidthTopJSONObject = borderWidthJSONObject.getJSONObject(_TOP_KEY);
	JSONObject borderWidthRightJSONObject = borderWidthJSONObject.getJSONObject(_RIGHT_KEY);
	JSONObject borderWidthBottomJSONObject = borderWidthJSONObject.getJSONObject(_BOTTOM_KEY);
	JSONObject borderWidthLeftJSONObject = borderWidthJSONObject.getJSONObject(_LEFT_KEY);

	String borderTopWidthValue = borderWidthTopJSONObject.getString(_VALUE_KEY) + borderWidthTopJSONObject.getString(_UNIT_KEY);
	String borderRightWidthValue = borderWidthRightJSONObject.getString(_VALUE_KEY) + borderWidthRightJSONObject.getString(_UNIT_KEY);
	String borderBottomWidthValue = borderWidthBottomJSONObject.getString(_VALUE_KEY) + borderWidthBottomJSONObject.getString(_UNIT_KEY);
	String borderLeftWidthValue = borderWidthLeftJSONObject.getString(_VALUE_KEY) + borderWidthLeftJSONObject.getString(_UNIT_KEY);

	// Style

	String borderTopStyleValue = borderStyleJSONObject.getString(_TOP_KEY);
	String borderRightStyleValue = borderStyleJSONObject.getString(_RIGHT_KEY);
	String borderBottomStyleValue = borderStyleJSONObject.getString(_BOTTOM_KEY);
	String borderLeftStyleValue = borderStyleJSONObject.getString(_LEFT_KEY);

	// Color

	String borderTopColorValue = borderColorJSONObject.getString(_TOP_KEY);
	String borderRightColorValue = borderColorJSONObject.getString(_RIGHT_KEY);
	String borderBottomColorValue = borderColorJSONObject.getString(_BOTTOM_KEY);
	String borderLeftColorValue = borderColorJSONObject.getString(_LEFT_KEY);

	if (ufaBorderWidth) {
		if (!_unitSet.contains(borderTopWidthValue)) {
			finalCSS.add("border-width: " + borderTopWidthValue);
		}
	}
	else {
		if (!_unitSet.contains(borderTopWidthValue)) {
			finalCSS.add("border-top-width: " + borderTopWidthValue);
		}

		if (!_unitSet.contains(borderRightWidthValue)) {
			finalCSS.add("border-right-width: " + borderRightWidthValue);
		}

		if (!_unitSet.contains(borderBottomWidthValue)) {
			finalCSS.add("border-bottom-width: " + borderBottomWidthValue);
		}

		if (!_unitSet.contains(borderLeftWidthValue)) {
			finalCSS.add("border-left-width: " + borderLeftWidthValue);
		}
	}

	if (ufaBorderStyle) {
		if (Validator.isNotNull(borderTopStyleValue)) {
			finalCSS.add("border-style: " + borderTopStyleValue);
		}
	}
	else {
		if (Validator.isNotNull(borderTopStyleValue)) {
			finalCSS.add("border-top-style: " + borderTopStyleValue);
		}

		if (Validator.isNotNull(borderRightStyleValue)) {
			finalCSS.add("border-right-style: " + borderRightStyleValue);
		}

		if (Validator.isNotNull(borderBottomStyleValue)) {
			finalCSS.add("border-bottom-style: " + borderBottomStyleValue);
		}

		if (Validator.isNotNull(borderLeftStyleValue)) {
			finalCSS.add("border-left-style: " + borderLeftStyleValue);
		}
	}

	if (ufaBorderColor) {
		if (Validator.isNotNull(borderTopColorValue)) {
			finalCSS.add("border-color: " + borderTopColorValue);
		}
	}
	else {
		if (Validator.isNotNull(borderTopColorValue)) {
			finalCSS.add("border-top-color: " + borderTopColorValue);
		}

		if (Validator.isNotNull(borderRightColorValue)) {
			finalCSS.add("border-right-color: " + borderRightColorValue);
		}

		if (Validator.isNotNull(borderBottomColorValue)) {
			finalCSS.add("border-bottom-color: " + borderBottomColorValue);
		}

		if (Validator.isNotNull(borderLeftColorValue)) {
			finalCSS.add("border-left-color: " + borderLeftColorValue);
		}
	}
}

// Spacing data

JSONObject spacingDataJSONObject = jsonObject.getJSONObject("spacingData");

if (spacingDataJSONObject != null) {
	JSONObject marginJSONObject = spacingDataJSONObject.getJSONObject("margin");
	JSONObject paddingJSONObject = spacingDataJSONObject.getJSONObject("padding");

	boolean ufaMargin = marginJSONObject.getBoolean(_SAME_FOR_ALL_KEY);
	boolean ufaPadding = paddingJSONObject.getBoolean(_SAME_FOR_ALL_KEY);

	// Margin

	JSONObject marginTopJSONObject = marginJSONObject.getJSONObject(_TOP_KEY);
	JSONObject marginRightJSONObject = marginJSONObject.getJSONObject(_RIGHT_KEY);
	JSONObject marginBottomJSONObject = marginJSONObject.getJSONObject(_BOTTOM_KEY);
	JSONObject marginLeftJSONObject = marginJSONObject.getJSONObject(_LEFT_KEY);

	String marginTopValue = marginTopJSONObject.getString(_VALUE_KEY) + marginTopJSONObject.getString(_UNIT_KEY);
	String marginRightValue = marginRightJSONObject.getString(_VALUE_KEY) + marginRightJSONObject.getString(_UNIT_KEY);
	String marginBottomValue = marginBottomJSONObject.getString(_VALUE_KEY) + marginBottomJSONObject.getString(_UNIT_KEY);
	String marginLeftValue = marginLeftJSONObject.getString(_VALUE_KEY) + marginLeftJSONObject.getString(_UNIT_KEY);

	if (ufaMargin) {
		if (!_unitSet.contains(marginTopValue)) {
			finalCSS.add("margin: " + marginTopValue);
		}
	}
	else {
		if (!_unitSet.contains(marginTopValue)) {
			finalCSS.add("margin-top: " + marginTopValue);
		}

		if (!_unitSet.contains(marginRightValue)) {
			finalCSS.add("margin-right: " + marginRightValue);
		}

		if (!_unitSet.contains(marginBottomValue)) {
			finalCSS.add("margin-bottom: " + marginBottomValue);
		}

		if (!_unitSet.contains(marginLeftValue)) {
			finalCSS.add("margin-left: " + marginLeftValue);
		}
	}

	// Padding

	JSONObject paddingTopJSONObject = paddingJSONObject.getJSONObject(_TOP_KEY);
	JSONObject paddingRightJSONObject = paddingJSONObject.getJSONObject(_RIGHT_KEY);
	JSONObject paddingBottomJSONObject = paddingJSONObject.getJSONObject(_BOTTOM_KEY);
	JSONObject paddingLeftJSONObject = paddingJSONObject.getJSONObject(_LEFT_KEY);

	String paddingTopValue = paddingTopJSONObject.getString(_VALUE_KEY) + paddingTopJSONObject.getString(_UNIT_KEY);
	String paddingRightValue = paddingRightJSONObject.getString(_VALUE_KEY) + paddingRightJSONObject.getString(_UNIT_KEY);
	String paddingBottomValue = paddingBottomJSONObject.getString(_VALUE_KEY) + paddingBottomJSONObject.getString(_UNIT_KEY);
	String paddingLeftValue = paddingLeftJSONObject.getString(_VALUE_KEY) + paddingLeftJSONObject.getString(_UNIT_KEY);

	if (ufaPadding) {
		if (!_unitSet.contains(paddingTopValue)) {
			finalCSS.add("padding: " + paddingTopValue);
		}
	}
	else {
		if (!_unitSet.contains(paddingTopValue)) {
			finalCSS.add("padding-top: " + paddingTopValue);
		}

		if (!_unitSet.contains(paddingRightValue)) {
			finalCSS.add("padding-right: " + paddingRightValue);
		}

		if (!_unitSet.contains(paddingBottomValue)) {
			finalCSS.add("padding-bottom: " + paddingBottomValue);
		}

		if (!_unitSet.contains(paddingLeftValue)) {
			finalCSS.add("padding-left: " + paddingLeftValue);
		}
	}
}

// Text data

JSONObject textDataJSONObject = jsonObject.getJSONObject("textData");

if (textDataJSONObject != null) {
	String color = textDataJSONObject.getString("color");
	String fontFamily = textDataJSONObject.getString("fontFamily");
	String fontSize = textDataJSONObject.getString("fontSize");
	String fontStyle = textDataJSONObject.getString("fontStyle");
	String fontWeight = textDataJSONObject.getString("fontWeight");
	String letterSpacing = textDataJSONObject.getString("letterSpacing");
	String lineHeight = textDataJSONObject.getString("lineHeight");
	String textAlign = textDataJSONObject.getString("textAlign");
	String textDecoration = textDataJSONObject.getString("textDecoration");
	String wordSpacing = textDataJSONObject.getString("wordSpacing");

	if (Validator.isNotNull(color)) {
		finalCSS.add("color: " + color);
	}

	if (Validator.isNotNull(fontFamily)) {
		finalCSS.add("font-family: '" + fontFamily + "'");
	}

	if (Validator.isNotNull(fontSize)) {
		finalCSS.add("font-size: " + fontSize);
	}

	if (Validator.isNotNull(fontStyle)) {
		finalCSS.add("font-style: " + fontStyle);
	}

	if (Validator.isNotNull(fontWeight)) {
		finalCSS.add("font-weight: " + fontWeight);
	}

	if (Validator.isNotNull(letterSpacing)) {
		finalCSS.add("letter-spacing: " + letterSpacing);
	}

	if (Validator.isNotNull(lineHeight)) {
		finalCSS.add("line-height: " + lineHeight);
	}

	if (Validator.isNotNull(textAlign)) {
		finalCSS.add("text-align: " + textAlign);
	}

	if (Validator.isNotNull(textDecoration)) {
		finalCSS.add("text-decoration: " + textDecoration);
	}

	if (Validator.isNotNull(wordSpacing)) {
		finalCSS.add("word-spacing: " + wordSpacing);
	}
}

// Advanced styling

JSONObject advancedDataJSONObject = jsonObject.getJSONObject("advancedData");

String customCSS = (advancedDataJSONObject != null) ? advancedDataJSONObject.getString("customCSS") : null;

// Generated CSS

out.print("#p_p_id_" + portlet.getPortletId() + "_ .portlet-content");

out.print(" {\n");

String[] finalCSSArray = finalCSS.toArray(new String[0]);

String finalCSSString = StringUtil.merge(finalCSSArray, ";\n");

out.print(_escapeCssBlock(finalCSSString));

out.print("\n}\n");

// Advanced CSS

if (Validator.isNotNull(customCSS)) {
	out.print(_escapeCssBlock(customCSS));
}

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("				");

				}
				catch (Exception e) {
					if (_log.isWarnEnabled()) {
						_log.warn(e.getMessage());
					}
				}
				
      out.write("\n");
      out.write("\n");
      out.write("			");
}
      out.write("\n");
      out.write("\n");
      out.write("		");

		}
		
      out.write("\n");
      out.write("\n");
      out.write("	</style>\n");
}
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f2(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_liferay_002dtheme_005fmeta_002dtags_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-theme:meta-tags
    com.liferay.taglib.theme.MetaTagsTag _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0 = new com.liferay.taglib.theme.MetaTagsTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0);
    try {
      _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.setParent(null);
      int _jspx_eval_liferay_002dtheme_005fmeta_002dtags_005f0 = _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.doStartTag();
      if (_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setParent(null);
      // /html/common/themes/top_head.jsp(12,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setKey("/html/common/themes/top_head.jsp#pre");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f0 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_aui_005fscript_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f0 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f0);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_aui_005fscript_005f0);
      // /html/common/themes/top_js.jspf(110,13) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f0.setKey("maintenance-alert");
      int _jspx_eval_liferay_002dui_005fmessage_005f0 = _jspx_th_liferay_002dui_005fmessage_005f0.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setParent(null);
      // /html/common/themes/top_js.jspf(413,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setKey("/html/common/themes/top_js.jspf#resources");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f1 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setParent(null);
      // /html/common/themes/top_head.jsp(217,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setKey("/html/common/themes/top_head.jsp#post");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f2 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2, _jsp_getInstanceManager(), false);
    }
    return false;
  }
}
