/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.taglib.ui.input_005fpermissions;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.liferay.exportimport.kernel.staging.LayoutStagingUtil;
import com.liferay.exportimport.kernel.staging.StagingUtil;
import com.liferay.layout.seo.kernel.LayoutSEOLink;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManager;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil;
import com.liferay.petra.string.CharPool;
import com.liferay.petra.string.StringBundler;
import com.liferay.petra.string.StringPool;
import com.liferay.portal.kernel.bean.BeanParamUtil;
import com.liferay.portal.kernel.bean.BeanPropertiesUtil;
import com.liferay.portal.kernel.configuration.Filter;
import com.liferay.portal.kernel.cookies.CookiesManagerUtil;
import com.liferay.portal.kernel.dao.search.DisplayTerms;
import com.liferay.portal.kernel.dao.search.ResultRowSplitter;
import com.liferay.portal.kernel.dao.search.RowChecker;
import com.liferay.portal.kernel.dao.search.RowMover;
import com.liferay.portal.kernel.dao.search.SearchContainer;
import com.liferay.portal.kernel.exception.LocalizedException;
import com.liferay.portal.kernel.exception.NoSuchLayoutException;
import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.language.LanguageUtil;
import com.liferay.portal.kernel.language.LanguageWrapper;
import com.liferay.portal.kernel.language.UnicodeLanguageUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.log.LogUtil;
import com.liferay.portal.kernel.model.*;
import com.liferay.portal.kernel.model.impl.*;
import com.liferay.portal.kernel.model.impl.VirtualLayout;
import com.liferay.portal.kernel.portlet.InvokerPortlet;
import com.liferay.portal.kernel.portlet.LiferayHeaderRequest;
import com.liferay.portal.kernel.portlet.LiferayHeaderResponse;
import com.liferay.portal.kernel.portlet.LiferayPortletMode;
import com.liferay.portal.kernel.portlet.LiferayPortletURL;
import com.liferay.portal.kernel.portlet.LiferayRenderRequest;
import com.liferay.portal.kernel.portlet.LiferayRenderResponse;
import com.liferay.portal.kernel.portlet.LiferayWindowState;
import com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletProvider;
import com.liferay.portal.kernel.portlet.PortletProviderUtil;
import com.liferay.portal.kernel.portlet.PortletSetupUtil;
import com.liferay.portal.kernel.portlet.PortletURLFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletURLUtil;
import com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil;
import com.liferay.portal.kernel.security.auth.AuthTokenUtil;
import com.liferay.portal.kernel.security.auth.PrincipalException;
import com.liferay.portal.kernel.security.permission.ActionKeys;
import com.liferay.portal.kernel.security.permission.ResourceActionsUtil;
import com.liferay.portal.kernel.service.*;
import com.liferay.portal.kernel.service.permission.GroupPermissionUtil;
import com.liferay.portal.kernel.service.permission.LayoutPermissionUtil;
import com.liferay.portal.kernel.service.permission.PortletPermissionUtil;
import com.liferay.portal.kernel.service.permission.RolePermissionUtil;
import com.liferay.portal.kernel.servlet.BufferCacheServletResponse;
import com.liferay.portal.kernel.servlet.MultiSessionMessages;
import com.liferay.portal.kernel.servlet.PortalMessages;
import com.liferay.portal.kernel.servlet.PortalWebResourceConstants;
import com.liferay.portal.kernel.servlet.PortalWebResourcesUtil;
import com.liferay.portal.kernel.servlet.ServletContextPool;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.servlet.taglib.ui.MenuItem;
import com.liferay.portal.kernel.util.ArrayUtil;
import com.liferay.portal.kernel.util.CalendarFactoryUtil;
import com.liferay.portal.kernel.util.Constants;
import com.liferay.portal.kernel.util.ContentTypes;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.FastDateFormatConstants;
import com.liferay.portal.kernel.util.FastDateFormatFactoryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.HashMapBuilder;
import com.liferay.portal.kernel.util.HtmlParserUtil;
import com.liferay.portal.kernel.util.HtmlUtil;
import com.liferay.portal.kernel.util.Http;
import com.liferay.portal.kernel.util.HttpComponentsUtil;
import com.liferay.portal.kernel.util.IntegerWrapper;
import com.liferay.portal.kernel.util.JavaConstants;
import com.liferay.portal.kernel.util.KeyValuePair;
import com.liferay.portal.kernel.util.ListUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.Portal;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.PortletKeys;
import com.liferay.portal.kernel.util.PrefsPropsUtil;
import com.liferay.portal.kernel.util.PropsKeys;
import com.liferay.portal.kernel.util.ReleaseInfo;
import com.liferay.portal.kernel.util.ServerDetector;
import com.liferay.portal.kernel.util.SessionClicks;
import com.liferay.portal.kernel.util.SetUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.TextFormatter;
import com.liferay.portal.kernel.util.Time;
import com.liferay.portal.kernel.util.TimeZoneUtil;
import com.liferay.portal.kernel.util.URLCodec;
import com.liferay.portal.kernel.util.UnicodeFormatter;
import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.util.WebKeys;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.impl.*;
import com.liferay.portal.security.sso.SSOUtil;
import com.liferay.portal.service.*;
import com.liferay.portal.servlet.BrowserSnifferUtil;
import com.liferay.portal.struts.Definition;
import com.liferay.portal.struts.StrutsUtil;
import com.liferay.portal.struts.TilesUtil;
import com.liferay.portal.util.PropsUtil;
import com.liferay.portal.util.PropsValues;
import com.liferay.portal.util.ShutdownUtil;
import com.liferay.portlet.HeaderRequestFactory;
import com.liferay.portlet.HeaderResponseFactory;
import com.liferay.portlet.LiferayPortletUtil;
import com.liferay.portlet.RenderParametersPool;
import com.liferay.portlet.RenderRequestFactory;
import com.liferay.portlet.RenderResponseFactory;
import com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil;
import com.liferay.portlet.usersadmin.util.UsersAdminUtil;
import com.liferay.sites.kernel.util.Sites;
import com.liferay.taglib.search.ResultRow;
import com.liferay.taglib.search.SearchEntry;
import com.liferay.taglib.search.TextSearchEntry;
import com.liferay.taglib.util.OutputTag;
import java.text.DateFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.TimeZone;
import java.util.TreeSet;
import javax.portlet.MimeResponse;
import javax.portlet.MutableRenderParameters;
import javax.portlet.PortletConfig;
import javax.portlet.PortletContext;
import javax.portlet.PortletException;
import javax.portlet.PortletMode;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.PortletURL;
import javax.portlet.UnavailableException;
import javax.portlet.WindowState;
import com.liferay.portal.kernel.servlet.MultiSessionErrors;
import com.liferay.portal.kernel.util.DateFormatFactoryUtil;
import com.liferay.taglib.aui.AUIUtil;
import com.liferay.taglib.util.InlineUtil;
import com.liferay.taglib.util.TagResourceBundleUtil;
import com.liferay.taglib.ui.InputPermissionsParamsTag;

public final class page_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/html/taglib/ui/input_permissions/horizontal.jspf", Long.valueOf(1717780602835L));
    _jspx_dependants.put("/html/taglib/init.jsp", Long.valueOf(1710321269648L));
    _jspx_dependants.put("/html/common/init.jsp", Long.valueOf(1712363247059L));
    _jspx_dependants.put("/html/taglib/init-ext.jsp", Long.valueOf(1710321210336L));
    _jspx_dependants.put("/html/common/init-ext.jsp", Long.valueOf(1710321210318L));
    _jspx_dependants.put("/html/taglib/ui/input_permissions/init.jsp", Long.valueOf(1710321210340L));
    _jspx_dependants.put("/html/taglib/ui/input_permissions/vertical.jspf", Long.valueOf(1717780602835L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(8);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model.impl");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model");
    _jspx_imports_packages.add("com.liferay.portal.model.impl");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.liferay.portal.kernel.service");
    _jspx_imports_packages.add("com.liferay.portal.service");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(161);
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PrefsPropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ContentTypes");
    _jspx_imports_classes.add("com.liferay.portlet.RenderRequestFactory");
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("java.text.Format");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowMover");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalMessages");
    _jspx_imports_classes.add("com.liferay.portlet.usersadmin.util.UsersAdminUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.WebKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.workflow.WorkflowConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.RolePermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.PrincipalException");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.liferay.taglib.util.OutputTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.MultiSessionErrors");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PropsKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.GetterUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayWindowState");
    _jspx_imports_classes.add("javax.portlet.PortletContext");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.ServletContextPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.InvokerPortlet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SessionClicks");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("com.liferay.taglib.util.TagResourceBundleUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsValues");
    _jspx_imports_classes.add("javax.portlet.PortletConfig");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.JavaConstants");
    _jspx_imports_classes.add("com.liferay.taglib.search.TextSearchEntry");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderResponseFactory");
    _jspx_imports_classes.add("com.liferay.portlet.LiferayPortletUtil");
    _jspx_imports_classes.add("com.liferay.taglib.ui.InputPermissionsParamsTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProviderUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HashMapBuilder");
    _jspx_imports_classes.add("com.liferay.petra.string.StringPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.URLCodec");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.DateFormatFactoryUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("javax.portlet.MimeResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("java.util.TreeSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatConstants");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionMessages");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.PortletPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ActionKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.SearchContainer");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TimeZoneUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourcesUtil");
    _jspx_imports_classes.add("java.util.LinkedHashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanPropertiesUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionErrors");
    _jspx_imports_classes.add("com.liferay.portlet.RenderParametersPool");
    _jspx_imports_classes.add("javax.portlet.MutableRenderParameters");
    _jspx_imports_classes.add("com.liferay.portal.kernel.cookies.CookiesManagerUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil");
    _jspx_imports_classes.add("javax.portlet.PortletPreferences");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManager");
    _jspx_imports_classes.add("com.liferay.taglib.search.SearchEntry");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Portal");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HttpComponentsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONObject");
    _jspx_imports_classes.add("com.liferay.portal.servlet.BrowserSnifferUtil");
    _jspx_imports_classes.add("com.liferay.taglib.aui.AUIUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.ResultRowSplitter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ArrayUtil");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.StagingUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.CharPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ResourceActionsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONArray");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.LayoutPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.configuration.Filter");
    _jspx_imports_classes.add("com.liferay.portal.security.sso.SSOUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.StringBundler");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HtmlUtil");
    _jspx_imports_classes.add("javax.portlet.PortletURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TextFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.taglib.ui.MenuItem");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.LocalizedException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.ShutdownUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.NoSuchLayoutException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.MultiSessionMessages");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderRequestFactory");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Constants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ReleaseInfo");
    _jspx_imports_classes.add("com.liferay.portal.struts.StrutsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.DisplayTerms");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocaleUtil");
    _jspx_imports_classes.add("javax.portlet.UnavailableException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourceConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Time");
    _jspx_imports_classes.add("java.util.TimeZone");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortalUtil");
    _jspx_imports_classes.add("javax.portlet.PortletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Validator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.UnicodeLanguageUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.LayoutStagingUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.StringUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeProperties");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortletKeys");
    _jspx_imports_classes.add("com.liferay.taglib.search.ResultRow");
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ServerDetector");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocalizationUtil");
    _jspx_imports_classes.add("javax.portlet.WindowState");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ListUtil");
    _jspx_imports_classes.add("com.liferay.portlet.RenderResponseFactory");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLink");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageWrapper");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.AuthTokenUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HtmlParserUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SetUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.Definition");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.impl.VirtualLayout");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.IntegerWrapper");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.Log");
    _jspx_imports_classes.add("javax.portlet.PortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.KeyValuePair");
    _jspx_imports_classes.add("java.util.HashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProvider");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.CalendarFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowChecker");
    _jspx_imports_classes.add("javax.portlet.PortletRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletSetupUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.TilesUtil");
    _jspx_imports_classes.add("com.liferay.sites.kernel.util.Sites");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.GroupPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Http");
    _jspx_imports_classes.add("com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BufferCacheServletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.DateUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderResponse");
    _jspx_imports_classes.add("java.util.Collections");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLFactoryUtil");
    _jspx_imports_classes.add("javax.portlet.PortletException");
    _jspx_imports_classes.add("com.liferay.taglib.util.InlineUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
      //  liferay-theme:defineObjects
      com.liferay.taglib.theme.DefineObjectsTag _jspx_th_liferay_002dtheme_005fdefineObjects_005f0 = new com.liferay.taglib.theme.DefineObjectsTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0);
      try {
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setParent(null);
        int _jspx_eval_liferay_002dtheme_005fdefineObjects_005f0 = _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doStartTag();
        if (_jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0, _jsp_getInstanceManager(), false);
      }
      com.liferay.portal.kernel.theme.ThemeDisplay themeDisplay = null;
      com.liferay.portal.kernel.model.Company company = null;
      com.liferay.portal.kernel.model.User user = null;
      com.liferay.portal.kernel.model.User realUser = null;
      com.liferay.portal.kernel.model.Contact contact = null;
      com.liferay.portal.kernel.model.Layout layout = null;
      java.util.List layouts = null;
      java.lang.Long plid = null;
      com.liferay.portal.kernel.model.LayoutTypePortlet layoutTypePortlet = null;
      java.lang.Long scopeGroupId = null;
      com.liferay.portal.kernel.security.permission.PermissionChecker permissionChecker = null;
      java.util.Locale locale = null;
      java.util.TimeZone timeZone = null;
      com.liferay.portal.kernel.model.Theme theme = null;
      com.liferay.portal.kernel.model.ColorScheme colorScheme = null;
      com.liferay.portal.kernel.theme.PortletDisplay portletDisplay = null;
      java.lang.Long portletGroupId = null;
      themeDisplay = (com.liferay.portal.kernel.theme.ThemeDisplay) _jspx_page_context.findAttribute("themeDisplay");
      company = (com.liferay.portal.kernel.model.Company) _jspx_page_context.findAttribute("company");
      user = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("user");
      realUser = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("realUser");
      contact = (com.liferay.portal.kernel.model.Contact) _jspx_page_context.findAttribute("contact");
      layout = (com.liferay.portal.kernel.model.Layout) _jspx_page_context.findAttribute("layout");
      layouts = (java.util.List) _jspx_page_context.findAttribute("layouts");
      plid = (java.lang.Long) _jspx_page_context.findAttribute("plid");
      layoutTypePortlet = (com.liferay.portal.kernel.model.LayoutTypePortlet) _jspx_page_context.findAttribute("layoutTypePortlet");
      scopeGroupId = (java.lang.Long) _jspx_page_context.findAttribute("scopeGroupId");
      permissionChecker = (com.liferay.portal.kernel.security.permission.PermissionChecker) _jspx_page_context.findAttribute("permissionChecker");
      locale = (java.util.Locale) _jspx_page_context.findAttribute("locale");
      timeZone = (java.util.TimeZone) _jspx_page_context.findAttribute("timeZone");
      theme = (com.liferay.portal.kernel.model.Theme) _jspx_page_context.findAttribute("theme");
      colorScheme = (com.liferay.portal.kernel.model.ColorScheme) _jspx_page_context.findAttribute("colorScheme");
      portletDisplay = (com.liferay.portal.kernel.theme.PortletDisplay) _jspx_page_context.findAttribute("portletDisplay");
      portletGroupId = (java.lang.Long) _jspx_page_context.findAttribute("portletGroupId");
      out.write('\n');
      out.write('\n');
      out.write("\n\n\n\n");
      //  portlet:defineObjects
      com.liferay.taglib.portlet.DefineObjectsTag _jspx_th_portlet_005fdefineObjects_005f0 = new com.liferay.taglib.portlet.DefineObjectsTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_portlet_005fdefineObjects_005f0);
      try {
        _jspx_th_portlet_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
        _jspx_th_portlet_005fdefineObjects_005f0.setParent(null);
        int _jspx_eval_portlet_005fdefineObjects_005f0 = _jspx_th_portlet_005fdefineObjects_005f0.doStartTag();
        if (_jspx_th_portlet_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_portlet_005fdefineObjects_005f0, _jsp_getInstanceManager(), false);
      }
      javax.portlet.ActionRequest actionRequest = null;
      javax.portlet.ActionResponse actionResponse = null;
      javax.portlet.EventRequest eventRequest = null;
      javax.portlet.EventResponse eventResponse = null;
      com.liferay.portal.kernel.portlet.LiferayPortletRequest liferayPortletRequest = null;
      com.liferay.portal.kernel.portlet.LiferayPortletResponse liferayPortletResponse = null;
      javax.portlet.PortletConfig portletConfig = null;
      java.lang.String portletName = null;
      javax.portlet.PortletPreferences portletPreferences = null;
      java.util.Map portletPreferencesValues = null;
      javax.portlet.PortletSession portletSession = null;
      java.util.Map portletSessionScope = null;
      javax.portlet.RenderRequest renderRequest = null;
      javax.portlet.RenderResponse renderResponse = null;
      javax.portlet.ResourceRequest resourceRequest = null;
      javax.portlet.ResourceResponse resourceResponse = null;
      actionRequest = (javax.portlet.ActionRequest) _jspx_page_context.findAttribute("actionRequest");
      actionResponse = (javax.portlet.ActionResponse) _jspx_page_context.findAttribute("actionResponse");
      eventRequest = (javax.portlet.EventRequest) _jspx_page_context.findAttribute("eventRequest");
      eventResponse = (javax.portlet.EventResponse) _jspx_page_context.findAttribute("eventResponse");
      liferayPortletRequest = (com.liferay.portal.kernel.portlet.LiferayPortletRequest) _jspx_page_context.findAttribute("liferayPortletRequest");
      liferayPortletResponse = (com.liferay.portal.kernel.portlet.LiferayPortletResponse) _jspx_page_context.findAttribute("liferayPortletResponse");
      portletConfig = (javax.portlet.PortletConfig) _jspx_page_context.findAttribute("portletConfig");
      portletName = (java.lang.String) _jspx_page_context.findAttribute("portletName");
      portletPreferences = (javax.portlet.PortletPreferences) _jspx_page_context.findAttribute("portletPreferences");
      portletPreferencesValues = (java.util.Map) _jspx_page_context.findAttribute("portletPreferencesValues");
      portletSession = (javax.portlet.PortletSession) _jspx_page_context.findAttribute("portletSession");
      portletSessionScope = (java.util.Map) _jspx_page_context.findAttribute("portletSessionScope");
      renderRequest = (javax.portlet.RenderRequest) _jspx_page_context.findAttribute("renderRequest");
      renderResponse = (javax.portlet.RenderResponse) _jspx_page_context.findAttribute("renderResponse");
      resourceRequest = (javax.portlet.ResourceRequest) _jspx_page_context.findAttribute("resourceRequest");
      resourceResponse = (javax.portlet.ResourceResponse) _jspx_page_context.findAttribute("resourceResponse");
      out.write('\n');
      out.write('\n');

PortletRequest portletRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);

PortletResponse portletResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);

String namespace = AUIUtil.getNamespace(portletRequest, portletResponse);

if (Validator.isNull(namespace)) {
	namespace = AUIUtil.getNamespace(request);
}

String currentURL = null;

if ((portletRequest != null) && (portletResponse != null)) {
	PortletURL currentURLObj = PortletURLUtil.getCurrent(PortalUtil.getLiferayPortletRequest(portletRequest), PortalUtil.getLiferayPortletResponse(portletResponse));

	currentURL = currentURLObj.toString();
}
else {
	currentURL = PortalUtil.getCurrentURL(request);
}

ResourceBundle resourceBundle = TagResourceBundleUtil.getResourceBundle(request, locale);

pageContext.setAttribute("resourceBundle", resourceBundle);

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

String uniqueNamespace = namespace + PortalUtil.getUniqueElementId(request, namespace, StringPool.BLANK);

if (!uniqueNamespace.endsWith(StringPool.UNDERLINE)) {
	uniqueNamespace = uniqueNamespace.concat(StringPool.UNDERLINE);
}

String modelName = (String)request.getAttribute("liferay-ui:input-permissions:modelName");

      out.write('\n');
      out.write('\n');
      //  c:choose
      com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f0 = new com.liferay.taglib.core.ChooseTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f0);
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('	');
          //  c:when
          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f0 = new com.liferay.taglib.core.WhenTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f0);
          try {
            _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
            _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
            // /html/taglib/ui/input_permissions/page.jsp(28,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fwhen_005f0.setTest( user.isGuestUser() );
            int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
            if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_liferay_002dui_005fmessage_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
                return;
              out.write('\n');
              out.write('	');
            }
            if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('	');
          //  c:otherwise
          com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = new com.liferay.taglib.core.OtherwiseTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f0);
          try {
            _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
            _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
            int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
            if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\n		");

		Group siteGroup = GroupLocalServiceUtil.getGroup(themeDisplay.getSiteGroupId());

		Role defaultGroupRole = RoleLocalServiceUtil.getDefaultGroupRole(siteGroup.getGroupId());

		boolean hasViewDefaultGroupRolePermission = RolePermissionUtil.contains(themeDisplay.getPermissionChecker(), siteGroup.getGroupId(), defaultGroupRole.getRoleId(), ActionKeys.VIEW);

		Role guestRole = RoleLocalServiceUtil.getRole(themeDisplay.getCompanyId(), RoleConstants.GUEST);

		String[] roleNames = {RoleConstants.GUEST};

		if (hasViewDefaultGroupRolePermission) {
			roleNames = ArrayUtil.append(roleNames, defaultGroupRole.getName());
		}

		String guestPermissionsName = "guestPermissions";
		String groupPermissionsName = "groupPermissions";

		if (!uniqueNamespace.equals(namespace)) {
			guestPermissionsName = guestPermissionsName + StringPool.UNDERLINE + modelName;
			groupPermissionsName = groupPermissionsName + StringPool.UNDERLINE + modelName;
		}

		List groupPermissions = ListUtil.fromArray(request.getParameterValues(groupPermissionsName));
		List guestPermissions = ListUtil.fromArray(request.getParameterValues(guestPermissionsName));

		List groupDefaultActions = (List)request.getAttribute("liferay-ui:input-permissions:groupDefaultActions");
		List guestDefaultActions = (List)request.getAttribute("liferay-ui:input-permissions:guestDefaultActions");
		List guestUnsupportedActions = (List)request.getAttribute("liferay-ui:input-permissions:guestUnsupportedActions");
		boolean showAllRoles = (boolean)request.getAttribute("liferay-ui:input-permissions:showAllRoles");
		List supportedActions = (List)request.getAttribute("liferay-ui:input-permissions:supportedActions");
		List<Role> supportedRoles = (List<Role>)request.getAttribute("liferay-ui:input-permissions:supportedRoles");

		boolean submitted = request.getParameter(groupPermissionsName) != null;

		boolean inputPermissionsShowOptions = ParamUtil.getBoolean(request, "inputPermissionsShowOptions");

		String inputPermissionsViewRole = ParamUtil.getString(request, "inputPermissionsViewRole", InputPermissionsParamsTag.getDefaultViewRole(modelName, themeDisplay));
		
              out.write("\n\n		<input id=\"");
              out.print( uniqueNamespace );
              out.write("inputPermissionsShowOptions\" name=\"");
              out.print( namespace );
              out.write("inputPermissionsShowOptions\" type=\"hidden\" value=\"");
              out.print( inputPermissionsShowOptions );
              out.write("\" />\n\n		");
              //  c:if
              com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f0 = new com.liferay.taglib.core.IfTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f0);
              try {
                _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
                _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
                // /html/taglib/ui/input_permissions/page.jsp(75,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fif_005f0.setTest( supportedActions.contains(ActionKeys.VIEW) );
                int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
                if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n			<p>\n				<label class=\"control-label\" for=\"");
                  out.print( namespace );
                  out.write("inputPermissionsViewRole\">\n					");
                  if (_jspx_meth_liferay_002dui_005fmessage_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context))
                    return;
                  out.write("\n				</label>\n\n				<select class=\"form-control\" id=\"");
                  out.print( uniqueNamespace );
                  out.write("inputPermissionsViewRole\" name=\"");
                  out.print( namespace );
                  out.write("inputPermissionsViewRole\" onChange=\"");
                  out.print( uniqueNamespace );
                  out.write("updatePermissionsView();\">\n\n					");

					String guestRoleLabel = LanguageUtil.format(request, "x-role", guestRole.getTitle(themeDisplay.getLocale()), false);

					if (PropsValues.PERMISSIONS_CHECK_GUEST_ENABLED) {
						guestRoleLabel = LanguageUtil.get(resourceBundle, "anyone") + StringPool.SPACE + StringPool.OPEN_PARENTHESIS + guestRoleLabel + StringPool.CLOSE_PARENTHESIS;
					}
					
                  out.write("\n\n					<option ");
                  out.print( inputPermissionsViewRole.equals(RoleConstants.GUEST) ? "selected=\"selected\"" : "" );
                  out.write(" value=\"");
                  out.print( RoleConstants.GUEST );
                  out.write('"');
                  out.write('>');
                  out.print( guestRoleLabel );
                  out.write("</option>\n\n					");
                  //  c:if
                  com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f1 = new com.liferay.taglib.core.IfTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f1);
                  try {
                    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
                    // /html/taglib/ui/input_permissions/page.jsp(93,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_c_005fif_005f1.setTest( hasViewDefaultGroupRolePermission );
                    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
                    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n						<option ");
                      out.print( inputPermissionsViewRole.equals(defaultGroupRole.getName()) ? "selected=\"selected\"" : "" );
                      out.write(" value=\"");
                      out.print( defaultGroupRole.getName() );
                      out.write("\">\n							");
                      //  c:choose
                      com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f1 = new com.liferay.taglib.core.ChooseTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f1);
                      try {
                        _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
                        int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
                        if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n								");
                          //  c:when
                          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f1 = new com.liferay.taglib.core.WhenTag();
                          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f1);
                          try {
                            _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
                            _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
                            // /html/taglib/ui/input_permissions/page.jsp(96,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_c_005fwhen_005f1.setTest( defaultGroupRole.getName().equals(RoleConstants.ORGANIZATION_USER) );
                            int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
                            if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              out.write("\n									");
                              if (_jspx_meth_liferay_002dui_005fmessage_005f2(_jspx_th_c_005fwhen_005f1, _jspx_page_context))
                              return;
                              out.write("\n								");
                            }
                            if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                            }
                          } finally {
                            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), false);
                          }
                          out.write("\n								");
                          //  c:when
                          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f2 = new com.liferay.taglib.core.WhenTag();
                          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f2);
                          try {
                            _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
                            _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
                            // /html/taglib/ui/input_permissions/page.jsp(99,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_c_005fwhen_005f2.setTest( defaultGroupRole.getName().equals(RoleConstants.POWER_USER) );
                            int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
                            if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              out.write("\n									");
                              if (_jspx_meth_liferay_002dui_005fmessage_005f3(_jspx_th_c_005fwhen_005f2, _jspx_page_context))
                              return;
                              out.write("\n								");
                            }
                            if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                            }
                          } finally {
                            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), false);
                          }
                          out.write("\n								");
                          //  c:when
                          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f3 = new com.liferay.taglib.core.WhenTag();
                          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f3);
                          try {
                            _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
                            _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
                            // /html/taglib/ui/input_permissions/page.jsp(102,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_c_005fwhen_005f3.setTest( defaultGroupRole.getName().equals(RoleConstants.SITE_MEMBER) );
                            int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
                            if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              out.write("\n									");
                              if (_jspx_meth_liferay_002dui_005fmessage_005f4(_jspx_th_c_005fwhen_005f3, _jspx_page_context))
                              return;
                              out.write("\n								");
                            }
                            if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                            }
                          } finally {
                            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), false);
                          }
                          out.write("\n								");
                          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
                            return;
                          out.write("\n							");
                        }
                        if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n						</option>\n					");
                    }
                    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), false);
                  }
                  out.write("\n\n					<option ");
                  out.print( inputPermissionsViewRole.equals(RoleConstants.OWNER) ? "selected=\"selected\"" : "" );
                  out.write(" value=\"");
                  out.print( RoleConstants.OWNER );
                  out.write('"');
                  out.write('>');
                  if (_jspx_meth_liferay_002dui_005fmessage_005f6(_jspx_th_c_005fif_005f0, _jspx_page_context))
                    return;
                  out.write("</option>\n				</select>\n\n				<button aria-controls=\"");
                  out.print( uniqueNamespace );
                  out.write("inputPermissionsTable\" aria-expanded=\"");
                  out.print( inputPermissionsShowOptions );
                  out.write("\" class=\"btn btn-secondary btn-sm mt-3\" id=\"");
                  out.print( uniqueNamespace );
                  out.write("inputPermissionsOptionsButton\" onclick=\"");
                  out.print( uniqueNamespace );
                  out.write("inputPermissionsToggle();\" type=\"button\">\n					");
                  out.print( inputPermissionsShowOptions ? LanguageUtil.get(request, "hide-options") : LanguageUtil.get(request, "more-options") );
                  out.write("\n				</button>\n\n				<span class=\"mt-3 ");
                  out.print( inputPermissionsShowOptions ? "hide" : "" );
                  out.write("\" id=\"");
                  out.print( uniqueNamespace );
                  out.write("inputPermissionsShowOptionsHelp\">\n					");
                  if (_jspx_meth_liferay_002dui_005ficon_002dhelp_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
                    return;
                  out.write("\n				</span>\n			</p>\n		");
                }
                if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), false);
              }
              out.write("\n\n		");
              //  c:choose
              com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f2 = new com.liferay.taglib.core.ChooseTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f2);
              try {
                _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
                _jspx_th_c_005fchoose_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
                int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
                if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n			");
                  //  c:when
                  com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f4 = new com.liferay.taglib.core.WhenTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f4);
                  try {
                    _jspx_th_c_005fwhen_005f4.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fwhen_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
                    // /html/taglib/ui/input_permissions/page.jsp(126,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_c_005fwhen_005f4.setTest( GetterUtil.getBoolean(request.getAttribute("liferay-ui:input-permissions:reverse")) );
                    int _jspx_eval_c_005fwhen_005f4 = _jspx_th_c_005fwhen_005f4.doStartTag();
                    if (_jspx_eval_c_005fwhen_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n				");
                      out.write('\n');
                      out.write('\n');
                      out.write("\n\n<div class=\"permissions-table-container table-responsive ");
                      out.print( (inputPermissionsShowOptions || !supportedActions.contains(ActionKeys.VIEW)) ? "" : "hide" );
                      out.write("\" id=\"");
                      out.print( uniqueNamespace );
                      out.write("inputPermissionsTable\">\n	<table class=\"table table-list\">\n		<thead>\n			<tr>\n				<th>\n					");
                      if (_jspx_meth_liferay_002dui_005fmessage_005f7(_jspx_th_c_005fwhen_005f4, _jspx_page_context))
                        return;
                      out.write("\n				</th>\n\n				");

				for (String roleName : roleNames) {
					Role role = RoleLocalServiceUtil.getRole(themeDisplay.getCompanyId(), roleName);
				
                      out.write("\n\n					<th class=\"table-column-text-center\">\n						");
                      out.print( role.getTitle(themeDisplay.getLocale()) );
                      out.write("\n					</th>\n\n				");

				}
				
                      out.write("\n\n				");
                      //  c:if
                      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f2 = new com.liferay.taglib.core.IfTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f2);
                      try {
                        _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
                        // /html/taglib/ui/input_permissions/vertical.jspf(36,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fif_005f2.setTest( showAllRoles && (supportedRoles != null) );
                        int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
                        if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n\n					");

					for (Role role : supportedRoles) {
					
                          out.write("\n\n						<th class=\"table-column-text-center\">\n							");
                          out.print( role.getTitle(themeDisplay.getLocale()) );
                          out.write("\n						</th>\n\n					");

					}
					
                          out.write("\n\n				");
                        }
                        if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n			</tr>\n		</thead>\n\n		");

		for (int i = 0; i < supportedActions.size(); i++) {
			String action = (String)supportedActions.get(i);
		
                      out.write("\n\n			<tr>\n				<td class=\"table-title\">\n					");
                      out.print( ResourceActionsUtil.getAction(request, action) );
                      out.write("\n				</td>\n\n				");

				for (String roleName : roleNames) {
					Role role = RoleLocalServiceUtil.getRole(themeDisplay.getCompanyId(), roleName);

					boolean checked = false;
					boolean disabled = false;

					if (roleName.equals(RoleConstants.GUEST)) {
						disabled = guestUnsupportedActions.contains(action);

						if (disabled) {
							checked = false;
						}
						else if (submitted) {
							checked = guestPermissions.contains(action);
						}
						else {
							checked = guestDefaultActions.contains(action) && inputPermissionsViewRole.equals(RoleConstants.GUEST);
						}
					}
					else if (roleName.equals(defaultGroupRole.getName())) {
						if (submitted) {
							checked = groupPermissions.contains(action);
						}
						else {
							checked = groupDefaultActions.contains(action);
						}
					}

					String checkboxFieldId = null;
					String checkboxFieldName = null;

					if (roleName.equals(RoleConstants.GUEST)) {
						checkboxFieldId = uniqueNamespace + "guestPermissions";
						checkboxFieldName = namespace + guestPermissionsName;
					}
					else {
						checkboxFieldId = uniqueNamespace + "groupPermissions";
						checkboxFieldName = namespace + groupPermissionsName;
					}

					checkboxFieldId = checkboxFieldId + StringPool.UNDERLINE + action;
				
                      out.write("\n\n					<td class=\"table-column-text-center\">\n						<label class=\"hide-accessible sr-only\" for=\"");
                      out.print( checkboxFieldId );
                      out.write('"');
                      out.write('>');
                      //  liferay-ui:message
                      com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f8 = new com.liferay.taglib.ui.MessageTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f8);
                      try {
                        _jspx_th_liferay_002dui_005fmessage_005f8.setPageContext(_jspx_page_context);
                        _jspx_th_liferay_002dui_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
                        // /html/taglib/ui/input_permissions/vertical.jspf(109,74) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f8.setArguments( new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())} );
                        // /html/taglib/ui/input_permissions/vertical.jspf(109,74) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f8.setKey("give-x-permission-to-users-with-role-x");
                        // /html/taglib/ui/input_permissions/vertical.jspf(109,74) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f8.setTranslateArguments( false );
                        int _jspx_eval_liferay_002dui_005fmessage_005f8 = _jspx_th_liferay_002dui_005fmessage_005f8.doStartTag();
                        if (_jspx_th_liferay_002dui_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f8, _jsp_getInstanceManager(), false);
                      }
                      out.write("</label>\n\n						");
                      //  c:if
                      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f3 = new com.liferay.taglib.core.IfTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f3);
                      try {
                        _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
                        // /html/taglib/ui/input_permissions/vertical.jspf(111,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fif_005f3.setTest( action.equals(ActionKeys.VIEW) );
                        int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
                        if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n							<input ");
                          out.print( checked ? "checked" : "" );
                          out.write(" class=\"hide\" id=\"");
                          out.print( checkboxFieldId );
                          out.write("\" name=\"");
                          out.print( checkboxFieldName );
                          out.write("\" type=\"checkbox\" value=\"");
                          out.print( action );
                          out.write("\" />\n\n							");

							disabled = true;

							checkboxFieldId = checkboxFieldId + "_display";
							checkboxFieldName = checkboxFieldName + "_display";
							
                          out.write("\n\n						");
                        }
                        if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n\n						<input ");
                      out.print( checked ? "checked" : "" );
                      out.write(' ');
                      out.print( disabled ? "disabled" : "" );
                      out.write(" id=\"");
                      out.print( checkboxFieldId );
                      out.write("\" name=\"");
                      out.print( checkboxFieldName );
                      out.write("\" title='");
                      out.print( LanguageUtil.format(request, "give-x-permission-to-users-with-role-x", new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())}, false) );
                      out.write("' type=\"checkbox\" value=\"");
                      out.print( action );
                      out.write("\" />\n					</td>\n\n				");

				}
				
                      out.write("\n\n				");
                      //  c:if
                      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f4 = new com.liferay.taglib.core.IfTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f4);
                      try {
                        _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fif_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
                        // /html/taglib/ui/input_permissions/vertical.jspf(130,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fif_005f4.setTest( showAllRoles && (supportedRoles != null) );
                        int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
                        if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n					<input name=\"");
                          out.print( uniqueNamespace );
                          out.write("inputPermissionsShowAllRoles\" type=\"hidden\" value=\"");
                          out.print( showAllRoles );
                          out.write("\" />\n\n					");

					for (Role role : supportedRoles) {
						String checkboxFieldId = uniqueNamespace + "rolePermissions_" + role.getRoleId();
						String checkboxFieldName = namespace + "rolePermissions_" + role.getRoleId();
					
                          out.write("\n\n						<td class=\"table-column-text-center\">\n							<label class=\"hide-accessible sr-only\" for=\"");
                          out.print( checkboxFieldId );
                          out.write('"');
                          out.write('>');
                          //  liferay-ui:message
                          com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f9 = new com.liferay.taglib.ui.MessageTag();
                          _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f9);
                          try {
                            _jspx_th_liferay_002dui_005fmessage_005f9.setPageContext(_jspx_page_context);
                            _jspx_th_liferay_002dui_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
                            // /html/taglib/ui/input_permissions/vertical.jspf(140,75) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f9.setArguments( new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())} );
                            // /html/taglib/ui/input_permissions/vertical.jspf(140,75) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f9.setKey("give-x-permission-to-users-with-role-x");
                            // /html/taglib/ui/input_permissions/vertical.jspf(140,75) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f9.setTranslateArguments( false );
                            int _jspx_eval_liferay_002dui_005fmessage_005f9 = _jspx_th_liferay_002dui_005fmessage_005f9.doStartTag();
                            if (_jspx_th_liferay_002dui_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                            }
                          } finally {
                            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f9, _jsp_getInstanceManager(), false);
                          }
                          out.write("</label>\n\n							<input id=\"");
                          out.print( checkboxFieldId );
                          out.write("\" name=\"");
                          out.print( checkboxFieldName );
                          out.write("\" title=\"");
                          out.print( LanguageUtil.format(request, "give-x-permission-to-users-with-role-x", new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())}, false) );
                          out.write("\" type=\"checkbox\" value=\"");
                          out.print( action );
                          out.write("\" />\n						</td>\n\n					");

					}
					
                          out.write("\n\n				");
                        }
                        if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n			</tr>\n\n		");

		}
		
                      out.write("\n\n	</table>\n</div>");
                      out.write("\n			");
                    }
                    if (_jspx_th_c_005fwhen_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f4, _jsp_getInstanceManager(), false);
                  }
                  out.write("\n			");
                  //  c:otherwise
                  com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = new com.liferay.taglib.core.OtherwiseTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f2);
                  try {
                    _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
                    int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
                    if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n				");
                      out.write('\n');
                      out.write('\n');
                      out.write("\n\n<div class=\"permissions-table-container table-responsive ");
                      out.print( (inputPermissionsShowOptions || !supportedActions.contains(ActionKeys.VIEW)) ? "" : "hide" );
                      out.write("\" id=\"");
                      out.print( uniqueNamespace );
                      out.write("inputPermissionsTable\" style=\"margin-bottom: 60px;\">\n	<table class=\"table table-list\">\n		<thead>\n			<tr>\n				<th>\n					");
                      if (_jspx_meth_liferay_002dui_005fmessage_005f10(_jspx_th_c_005fotherwise_005f2, _jspx_page_context))
                        return;
                      out.write("\n				</th>\n\n				");

				for (int i = 0; i < supportedActions.size(); i++) {
					String action = (String)supportedActions.get(i);
				
                      out.write("\n\n					<th class=\"table-column-text-center\">\n						");
                      out.print( ResourceActionsUtil.getAction(request, action) );
                      out.write("\n					</th>\n\n				");

				}
				
                      out.write("\n\n			</tr>\n		</thead>\n\n		");

		for (String roleName : roleNames) {
			Role role = RoleLocalServiceUtil.getRole(themeDisplay.getCompanyId(), roleName);
		
                      out.write("\n\n			<tr>\n				<td class=\"table-title\">\n					");
                      out.print( role.getTitle(themeDisplay.getLocale()) );
                      out.write("\n				</td>\n\n				");

				for (int i = 0; i < supportedActions.size(); i++) {
					String action = (String)supportedActions.get(i);

					boolean checked = false;
					boolean disabled = false;

					if (roleName.equals(RoleConstants.GUEST)) {
						disabled = guestUnsupportedActions.contains(action);

						if (disabled) {
							checked = false;
						}
						else if (submitted) {
							checked = guestPermissions.contains(action);
						}
						else {
							checked = guestDefaultActions.contains(action) && inputPermissionsViewRole.equals(RoleConstants.GUEST);
						}
					}
					else if (roleName.equals(defaultGroupRole.getName())) {
						if (submitted) {
							checked = groupPermissions.contains(action);
						}
						else {
							checked = groupDefaultActions.contains(action);
						}
					}

					String checkboxFieldId = null;
					String checkboxFieldName = null;

					if (roleName.equals(RoleConstants.GUEST)) {
						checkboxFieldId = uniqueNamespace + "guestPermissions";
						checkboxFieldName = namespace + guestPermissionsName;
					}
					else {
						checkboxFieldId = uniqueNamespace + "groupPermissions";
						checkboxFieldName = namespace + groupPermissionsName;
					}

					checkboxFieldId = checkboxFieldId + StringPool.UNDERLINE + action;
				
                      out.write("\n\n					<td class=\"table-column-text-center\">\n						<label class=\"sr-only\" for=\"");
                      out.print( checkboxFieldId );
                      out.write('"');
                      out.write('>');
                      //  liferay-ui:message
                      com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f11 = new com.liferay.taglib.ui.MessageTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f11);
                      try {
                        _jspx_th_liferay_002dui_005fmessage_005f11.setPageContext(_jspx_page_context);
                        _jspx_th_liferay_002dui_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f2);
                        // /html/taglib/ui/input_permissions/horizontal.jspf(94,58) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f11.setArguments( new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())} );
                        // /html/taglib/ui/input_permissions/horizontal.jspf(94,58) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f11.setKey("give-x-permission-to-users-with-role-x");
                        // /html/taglib/ui/input_permissions/horizontal.jspf(94,58) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_liferay_002dui_005fmessage_005f11.setTranslateArguments( false );
                        int _jspx_eval_liferay_002dui_005fmessage_005f11 = _jspx_th_liferay_002dui_005fmessage_005f11.doStartTag();
                        if (_jspx_th_liferay_002dui_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f11, _jsp_getInstanceManager(), false);
                      }
                      out.write("</label>\n\n						");
                      //  c:if
                      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f5 = new com.liferay.taglib.core.IfTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f5);
                      try {
                        _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fif_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f2);
                        // /html/taglib/ui/input_permissions/horizontal.jspf(96,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fif_005f5.setTest( action.equals(ActionKeys.VIEW) );
                        int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
                        if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n							<input ");
                          out.print( checked ? "checked" : "" );
                          out.write(" class=\"hide\" id=\"");
                          out.print( checkboxFieldId );
                          out.write("\" name=\"");
                          out.print( checkboxFieldName );
                          out.write("\" type=\"checkbox\" value=\"");
                          out.print( action );
                          out.write("\" />\n\n							");

							disabled = true;

							checkboxFieldId = checkboxFieldId + "_display";
							checkboxFieldName = checkboxFieldName + "_display";
							
                          out.write("\n\n						");
                        }
                        if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n\n						<input ");
                      out.print( checked ? "checked" : "" );
                      out.write(' ');
                      out.print( disabled ? "disabled" : "" );
                      out.write(" id=\"");
                      out.print( checkboxFieldId );
                      out.write("\" name=\"");
                      out.print( checkboxFieldName );
                      out.write("\" title='");
                      out.print( LanguageUtil.format(request, "give-x-permission-to-users-with-role-x", new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())}, false) );
                      out.write("' type=\"checkbox\" value=\"");
                      out.print( action );
                      out.write("\" />\n					</td>\n\n				");

				}
				
                      out.write("\n\n			</tr>\n\n		");

		}
		
                      out.write("\n\n		");
                      //  c:if
                      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f6 = new com.liferay.taglib.core.IfTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f6);
                      try {
                        _jspx_th_c_005fif_005f6.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fif_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f2);
                        // /html/taglib/ui/input_permissions/horizontal.jspf(121,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fif_005f6.setTest( showAllRoles && (supportedRoles != null) );
                        int _jspx_eval_c_005fif_005f6 = _jspx_th_c_005fif_005f6.doStartTag();
                        if (_jspx_eval_c_005fif_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n			<input name=\"");
                          out.print( uniqueNamespace );
                          out.write("inputPermissionsShowAllRoles\" type=\"hidden\" value=\"");
                          out.print( showAllRoles );
                          out.write("\" />\n\n			");

			for (Role role : supportedRoles) {
				String checkboxFieldId = uniqueNamespace + "rolePermissions_" + role.getRoleId();
				String checkboxFieldName = namespace + "rolePermissions_" + role.getRoleId();
			
                          out.write("\n\n				<tr>\n					<td class=\"table-title\">\n						");
                          out.print( role.getTitle(themeDisplay.getLocale()) );
                          out.write("\n					</td>\n\n					");

					for (int i = 0; i < supportedActions.size(); i++) {
						String action = (String)supportedActions.get(i);
					
                          out.write("\n\n						<td class=\"table-column-text-center\">\n							<label class=\"hide-accessible sr-only\" for=\"");
                          out.print( checkboxFieldId );
                          out.write('"');
                          out.write('>');
                          //  liferay-ui:message
                          com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f12 = new com.liferay.taglib.ui.MessageTag();
                          _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f12);
                          try {
                            _jspx_th_liferay_002dui_005fmessage_005f12.setPageContext(_jspx_page_context);
                            _jspx_th_liferay_002dui_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f6);
                            // /html/taglib/ui/input_permissions/horizontal.jspf(141,75) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f12.setArguments( new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())} );
                            // /html/taglib/ui/input_permissions/horizontal.jspf(141,75) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f12.setKey("give-x-permission-to-users-with-role-x");
                            // /html/taglib/ui/input_permissions/horizontal.jspf(141,75) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                            _jspx_th_liferay_002dui_005fmessage_005f12.setTranslateArguments( false );
                            int _jspx_eval_liferay_002dui_005fmessage_005f12 = _jspx_th_liferay_002dui_005fmessage_005f12.doStartTag();
                            if (_jspx_th_liferay_002dui_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                            }
                          } finally {
                            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f12, _jsp_getInstanceManager(), false);
                          }
                          out.write("</label>\n\n							<input id=\"");
                          out.print( checkboxFieldId );
                          out.write("\" name=\"");
                          out.print( checkboxFieldName );
                          out.write("\" title=\"");
                          out.print( LanguageUtil.format(request, "give-x-permission-to-users-with-role-x", new Object[] {ResourceActionsUtil.getAction(request, action), role.getTitle(themeDisplay.getLocale())}, false) );
                          out.write("\" type=\"checkbox\" value=\"");
                          out.print( action );
                          out.write("\" />\n						</td>\n\n					");

					}
					
                          out.write("\n\n				</tr>\n\n			");

			}
			
                          out.write("\n\n		");
                        }
                        if (_jspx_th_c_005fif_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f6, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n	</table>\n</div>");
                      out.write("\n			");
                    }
                    if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f2, _jsp_getInstanceManager(), false);
                  }
                  out.write('\n');
                  out.write('	');
                  out.write('	');
                }
                if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), false);
              }
              out.write("\n\n		");
              //  aui:script
              com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f0 = new com.liferay.taglib.aui.ScriptTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_aui_005fscript_005f0);
              try {
                _jspx_th_aui_005fscript_005f0.setPageContext(_jspx_page_context);
                _jspx_th_aui_005fscript_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
                int _jspx_eval_aui_005fscript_005f0 = _jspx_th_aui_005fscript_005f0.doStartTag();
                if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_aui_005fscript_005f0);
                  }
                  do {
                    out.write("\n\n			function ");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsToggle() {\n				var isInputPermissionsShowOptionsTrue = (document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsShowOptions').value === 'true');\n\n				");
                    out.print( uniqueNamespace );
                    out.write("togglePermissionsOptions(!isInputPermissionsShowOptionsTrue);\n			}\n\n			function ");
                    out.print( uniqueNamespace );
                    out.write("togglePermissionsOptions(force) {\n				var inputPermissionsTable = document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsTable');\n\n				if (inputPermissionsTable) {\n					if (force) {\n						inputPermissionsTable.classList.remove('hide');\n					}\n					else {\n						inputPermissionsTable.classList.add('hide');\n					}\n				}\n\n				var inputPermissionsShowOptionsHelp = document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsShowOptionsHelp');\n\n				if (inputPermissionsShowOptionsHelp) {\n					if (force) {\n						inputPermissionsShowOptionsHelp.classList.add('hide');\n					}\n					else {\n						inputPermissionsShowOptionsHelp.classList.remove('hide');\n					}\n				}\n\n				var inputPermissionsShowOptions = document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsShowOptions');\n\n				if (inputPermissionsShowOptions) {\n					inputPermissionsShowOptions.value = force;\n				}\n\n				var inputPermissionsOptionsButton = document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsOptionsButton');\n\n				if (inputPermissionsOptionsButton) {\n					inputPermissionsOptionsButton.innerText = force ? '");
                    out.print( LanguageUtil.get(request, "hide-options") );
                    out.write("' :'");
                    out.print( LanguageUtil.get(request, "more-options") );
                    out.write("' ;\n					inputPermissionsOptionsButton.ariaExpanded = force;\n					inputPermissionsOptionsButton.classList = force ? \"btn btn-secondary btn-sm mb-1 mt-3\" : \"btn btn-secondary btn-sm mb-5 mt-3\";\n				}\n			}\n\n			function ");
                    out.print( uniqueNamespace );
                    out.write("updatePermissionsView() {\n				var permissionsViewRoleInput = document.getElementById('");
                    out.print( uniqueNamespace );
                    out.write("inputPermissionsViewRole');\n\n				if (permissionsViewRoleInput) {\n					var viewableBy = permissionsViewRoleInput.value;\n\n					var checkGroupViewPermissions = false;\n					var checkGuestViewPermissions = false;\n\n					if (viewableBy === '");
                    out.print( RoleConstants.GUEST );
                    out.write("') {\n						checkGuestViewPermissions = true;\n						checkGroupViewPermissions = true;\n					}\n					else if (viewableBy === '");
                    out.print( defaultGroupRole.getName() );
                    out.write("') {\n						checkGroupViewPermissions = true;\n					}\n\n					");
                    out.print( uniqueNamespace );
                    out.write("doUpdateViewValue('");
                    out.print( uniqueNamespace );
                    out.write("guestPermissions_VIEW', checkGuestViewPermissions);\n					");
                    out.print( uniqueNamespace );
                    out.write("doUpdateViewValue('");
                    out.print( uniqueNamespace );
                    out.write("groupPermissions_VIEW', checkGroupViewPermissions);\n				}\n			}\n\n			function ");
                    out.print( uniqueNamespace );
                    out.write("doUpdateViewValue(id, checkPermission) {\n				var element = document.getElementById(id);\n\n				if (element) {\n					element.checked = checkPermission;\n				}\n\n				var displayElement = document.getElementById(id + '_display');\n\n				if (displayElement) {\n					displayElement.checked = checkPermission;\n				}\n			}\n		");
                    int evalDoAfterBody = _jspx_th_aui_005fscript_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                  }
                }
                if (_jspx_th_aui_005fscript_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_aui_005fscript_005f0, _jsp_getInstanceManager(), false);
              }
              out.write('\n');
              out.write('	');
            }
            if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), false);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f0 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f0);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /html/taglib/ui/input_permissions/page.jsp(29,2) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f0.setKey("not-available");
      int _jspx_eval_liferay_002dui_005fmessage_005f0 = _jspx_th_liferay_002dui_005fmessage_005f0.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f1 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f1);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /html/taglib/ui/input_permissions/page.jsp(78,5) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f1.setKey("viewable-by");
      int _jspx_eval_liferay_002dui_005fmessage_005f1 = _jspx_th_liferay_002dui_005fmessage_005f1.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f1, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f2 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f2);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
      // /html/taglib/ui/input_permissions/page.jsp(97,9) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f2.setKey("organization-members");
      int _jspx_eval_liferay_002dui_005fmessage_005f2 = _jspx_th_liferay_002dui_005fmessage_005f2.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f2, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f3 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f3);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
      // /html/taglib/ui/input_permissions/page.jsp(100,9) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f3.setKey("power-users");
      int _jspx_eval_liferay_002dui_005fmessage_005f3 = _jspx_th_liferay_002dui_005fmessage_005f3.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f3, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f4 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f4);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f3);
      // /html/taglib/ui/input_permissions/page.jsp(103,9) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f4.setKey("site-members");
      int _jspx_eval_liferay_002dui_005fmessage_005f4 = _jspx_th_liferay_002dui_005fmessage_005f4.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f4, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = new com.liferay.taglib.core.OtherwiseTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f1);
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n									");
        if (_jspx_meth_liferay_002dui_005fmessage_005f5(_jspx_th_c_005fotherwise_005f1, _jspx_page_context))
          return true;
        out.write("\n								");
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f5 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f5);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f1);
      // /html/taglib/ui/input_permissions/page.jsp(106,9) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f5.setKey("user");
      int _jspx_eval_liferay_002dui_005fmessage_005f5 = _jspx_th_liferay_002dui_005fmessage_005f5.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f5, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f6 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f6);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /html/taglib/ui/input_permissions/page.jsp(112,139) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f6.setKey("owner");
      int _jspx_eval_liferay_002dui_005fmessage_005f6 = _jspx_th_liferay_002dui_005fmessage_005f6.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f6, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005ficon_002dhelp_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:icon-help
    com.liferay.taglib.ui.IconHelpTag _jspx_th_liferay_002dui_005ficon_002dhelp_005f0 = new com.liferay.taglib.ui.IconHelpTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005ficon_002dhelp_005f0);
    try {
      _jspx_th_liferay_002dui_005ficon_002dhelp_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005ficon_002dhelp_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /html/taglib/ui/input_permissions/page.jsp(120,5) name = message type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005ficon_002dhelp_005f0.setMessage("input-permissions-more-options-help");
      int _jspx_eval_liferay_002dui_005ficon_002dhelp_005f0 = _jspx_th_liferay_002dui_005ficon_002dhelp_005f0.doStartTag();
      if (_jspx_th_liferay_002dui_005ficon_002dhelp_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005ficon_002dhelp_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f7 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f7);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
      // /html/taglib/ui/input_permissions/vertical.jspf(20,5) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f7.setKey("action");
      int _jspx_eval_liferay_002dui_005fmessage_005f7 = _jspx_th_liferay_002dui_005fmessage_005f7.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f7, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f10 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f10);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f2);
      // /html/taglib/ui/input_permissions/horizontal.jspf(20,5) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f10.setKey("role");
      int _jspx_eval_liferay_002dui_005fmessage_005f10 = _jspx_th_liferay_002dui_005fmessage_005f10.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f10, _jsp_getInstanceManager(), false);
    }
    return false;
  }
}
