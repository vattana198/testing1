<%--
/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */
--%>

<%
String rememberMe = CookiesManagerUtil.getCookieValue(CookiesConstants.NAME_REMEMBER_ME, request);
%>

<c:if test="<%= !themeDisplay.isSignedIn() || Validator.isNull(rememberMe) %>">
	<aui:script sandbox="<%= true %>">
		import(Liferay.ThemeDisplay.getPathContext() + '/o/frontend-js-web/__liferay__/index.js').then(
			({openToast}) => {
				AUI().use(
					'liferay-session',
					function() {
						Liferay.Session = new Liferay.SessionBase(
							{
								autoExtend: <%= !themeDisplay.isSignedIn() || SessionTimeoutUtil.isAutoExtend(request) %>,
								redirectOnExpire: <%= SSOUtil.isSessionRedirectOnExpire(themeDisplay.getCompanyId()) %>,
								redirectUrl: '<%= HtmlUtil.escapeJS(SSOUtil.getSessionExpirationRedirectURL(themeDisplay.getCompanyId(), themeDisplay.getURLHome())) %>',
								sessionLength: <%= PropsValues.SESSION_TIMEOUT * 60 %>,
								sessionTimeoutOffset: <%= SessionTimeoutUtil.getAutoExtendOffset(request) %>,
								warningLength: <%= PropsValues.SESSION_TIMEOUT_WARNING * 60 %>
							}
						);

						<c:if test="<%= themeDisplay.isSignedIn() && (PropsValues.SESSION_TIMEOUT_WARNING > 0) %>">
							Liferay.Session.plug(
								Liferay.SessionDisplay,
								{
									openToast,
								}
							);
						</c:if>
					}
				);
			}
		)
	</aui:script>
</c:if>